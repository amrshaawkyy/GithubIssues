[
    {
        "url": "https://api.github.com/repos/facebook/react/issues/19548",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/19548/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/19548/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/19548/events",
        "html_url": "https://github.com/facebook/react/issues/19548",
        "id": 674412514,
        "node_id": "MDU6SXNzdWU2NzQ0MTI1MTQ=",
        "number": 19548,
        "title": "Bug: HOC (memo/forwardRef) should throw for noop function",
        "user": {
            "login": "ambar",
            "id": 105919,
            "node_id": "MDQ6VXNlcjEwNTkxOQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/105919?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ambar",
            "html_url": "https://github.com/ambar",
            "followers_url": "https://api.github.com/users/ambar/followers",
            "following_url": "https://api.github.com/users/ambar/following{/other_user}",
            "gists_url": "https://api.github.com/users/ambar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ambar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ambar/subscriptions",
            "organizations_url": "https://api.github.com/users/ambar/orgs",
            "repos_url": "https://api.github.com/users/ambar/repos",
            "events_url": "https://api.github.com/users/ambar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ambar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 155984160,
                "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
                "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
                "name": "Status: Unconfirmed",
                "color": "d4c5f9",
                "default": false,
                "description": "A potential issue that we haven't yet confirmed as a bug"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-08-06T15:43:15Z",
        "updated_at": "2020-08-06T15:43:15Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: v16\r\n\r\n## Steps To Reproduce\r\n\r\n```js\r\nimport React from \"react\";\r\n\r\nexport const Q = React.memo(() => {});\r\nexport const Z = React.forwardRef(() => {});\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <Q />\r\n      <Z />\r\n    </>\r\n  );\r\n}\r\n```\r\n\r\nLink to code example: https://codesandbox.io/s/hoc-throw-null-xrhwg\r\n\r\n## The current behavior\r\n\r\nNo errors.\r\n\r\n## The expected behavior\r\n\r\n> Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/19547",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/19547/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/19547/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/19547/events",
        "html_url": "https://github.com/facebook/react/issues/19547",
        "id": 674411480,
        "node_id": "MDU6SXNzdWU2NzQ0MTE0ODA=",
        "number": 19547,
        "title": "Error: \"Cannot read property 'length' of undefined\"",
        "user": {
            "login": "dzmitry-haawk",
            "id": 53858504,
            "node_id": "MDQ6VXNlcjUzODU4NTA0",
            "avatar_url": "https://avatars0.githubusercontent.com/u/53858504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dzmitry-haawk",
            "html_url": "https://github.com/dzmitry-haawk",
            "followers_url": "https://api.github.com/users/dzmitry-haawk/followers",
            "following_url": "https://api.github.com/users/dzmitry-haawk/following{/other_user}",
            "gists_url": "https://api.github.com/users/dzmitry-haawk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dzmitry-haawk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dzmitry-haawk/subscriptions",
            "organizations_url": "https://api.github.com/users/dzmitry-haawk/orgs",
            "repos_url": "https://api.github.com/users/dzmitry-haawk/repos",
            "events_url": "https://api.github.com/users/dzmitry-haawk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dzmitry-haawk/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-08-06T15:41:45Z",
        "updated_at": "2020-08-06T15:41:45Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Describe what you were doing when the bug occurred:\r\n1. \r\n2. \r\n3. \r\n\r\n---------------------------------------------\r\nPlease do not remove the text below this line\r\n---------------------------------------------\r\n\r\nDevTools version: 4.8.2-fed4ae024\r\n\r\nCall stack: at getChartData (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:18061:32)\r\n    at ProfilingCache.getFlamegraphChartData (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:18301:14)\r\n    at CommitFlamegraphAutoSizer (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:31722:32)\r\n    at vh (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:11067:7)\r\n    at fi (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:11733:7)\r\n    at ck (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:14430:86)\r\n    at bk (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:13779:11)\r\n    at ak (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:13768:5)\r\n    at Sj (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:13750:7)\r\n    at Jj (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:13448:118)\r\n\r\nComponent stack: at CommitFlamegraphAutoSizer (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:31701:48)\r\n    at div\r\n    at div\r\n    at div\r\n    at SettingsModalContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:26139:23)\r\n    at Profiler_Profiler (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:33363:48)\r\n    at ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:27172:5)\r\n    at PortaledContent (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:27303:32)\r\n    at div\r\n    at div\r\n    at ProfilerContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:30463:23)\r\n    at TreeContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:22538:23)\r\n    at SettingsContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:23040:27)\r\n    at ModalDialogContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:28328:23)\r\n    at DevTools_DevTools (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:33797:21)",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/19545",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/19545/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/19545/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/19545/events",
        "html_url": "https://github.com/facebook/react/issues/19545",
        "id": 674374254,
        "node_id": "MDU6SXNzdWU2NzQzNzQyNTQ=",
        "number": 19545,
        "title": "Bug: Proxy on Context throws an error",
        "user": {
            "login": "timothykrell-hb",
            "id": 63598274,
            "node_id": "MDQ6VXNlcjYzNTk4Mjc0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/63598274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timothykrell-hb",
            "html_url": "https://github.com/timothykrell-hb",
            "followers_url": "https://api.github.com/users/timothykrell-hb/followers",
            "following_url": "https://api.github.com/users/timothykrell-hb/following{/other_user}",
            "gists_url": "https://api.github.com/users/timothykrell-hb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timothykrell-hb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timothykrell-hb/subscriptions",
            "organizations_url": "https://api.github.com/users/timothykrell-hb/orgs",
            "repos_url": "https://api.github.com/users/timothykrell-hb/repos",
            "events_url": "https://api.github.com/users/timothykrell-hb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timothykrell-hb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 155984160,
                "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
                "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
                "name": "Status: Unconfirmed",
                "color": "d4c5f9",
                "default": false,
                "description": "A potential issue that we haven't yet confirmed as a bug"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-08-06T14:50:25Z",
        "updated_at": "2020-08-06T14:50:25Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 16.12.0\r\n\r\n## Steps To Reproduce\r\n\r\n1. Create an app with a `Proxy` function that has a `get` method that returns a function stored in Context\r\n2. Attempt to look at Provider component in devtools\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example:\r\nhttps://codesandbox.io/s/stoic-jepsen-7jjfn?file=/src/App.js\r\nhttps://7jjfn.csb.app/\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\nWhen using the devtools to inspect the `Context.Provider`, devtools throw an error:\r\n```\r\nUncaught DOMException: Failed to execute 'postMessage' on 'Window': function () {\r\n        return null;\r\n      } could not be cloned.\r\n```\r\nComponents using the context do not show info in devtools and show \"Loading...\" instead.\r\n\r\n## The expected behavior\r\nNo error is thrown.\r\n\r\n## Possibly Related\r\n#16691",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/19542",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/19542/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/19542/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/19542/events",
        "html_url": "https://github.com/facebook/react/pull/19542",
        "id": 673856583,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDYzNjUwMzQ1",
        "number": 19542,
        "title": "Improve error boundary handling for unmounted subtrees",
        "user": {
            "login": "bvaughn",
            "id": 29597,
            "node_id": "MDQ6VXNlcjI5NTk3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/29597?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bvaughn",
            "html_url": "https://github.com/bvaughn",
            "followers_url": "https://api.github.com/users/bvaughn/followers",
            "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
            "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
            "organizations_url": "https://api.github.com/users/bvaughn/orgs",
            "repos_url": "https://api.github.com/users/bvaughn/repos",
            "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bvaughn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 196858374,
                "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
                "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
                "name": "CLA Signed",
                "color": "e7e7e7",
                "default": false,
                "description": null
            },
            {
                "id": 1775958285,
                "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
                "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
                "name": "React Core Team",
                "color": "9149d1",
                "default": false,
                "description": "Opened by a member of the React Core Team"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 15,
        "created_at": "2020-08-05T21:23:54Z",
        "updated_at": "2020-08-06T16:04:41Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "pull_request": {
            "url": "https://api.github.com/repos/facebook/react/pulls/19542",
            "html_url": "https://github.com/facebook/react/pull/19542",
            "diff_url": "https://github.com/facebook/react/pull/19542.diff",
            "patch_url": "https://github.com/facebook/react/pull/19542.patch"
        },
        "body": "A passive effect's cleanup function may throw after an unmount. Prior to this commit, such an error would be ignored. (React would not notify any error boundaries.) After this commit, React's behavior varies depending on which reconciler fork is being used.\r\n\r\n### Old reconciler fork\r\nReact will call `componentDidCatch` for the nearest unmounted error boundary (if there is one). If there are no unmounted error boundaries, React will still \"swallow\" the error because the return pointer has been disconnected so the normal error handling logic does not know how to traverse the tree to find the nearest still-mounted ancestor. (This behavior is not ideal, but it is temporary and will be replaced by the new fork.)\r\n\r\n### New reconciler fork\r\nReact will skip any unmounted boundaries and look for a still-mounted boundary. If one is found, it will call `getDerivedStateFromError` and/or `componentDidCatch` (depending on the type of boundary). Unmounted boundaries will be ignored, but as they have been unmounted– this seems appropriate.\r\n\r\nTests have been added for both reconciler variants. Note that **syncing this change to www/fbsource might appear as a regression**, because we may start logging errors that were previously ignored.\r\n\r\n### Open questions\r\n- [ ] Is the temporary fix in the old reconciler worth it? Should we just let it swallow errors for now until the new fork gets merged again?\r\n- [ ] Should we call gDSFE after an unmounted tree throws or should we only call cDC?\r\n- [ ] Is this bug (potentially) bad enough to warrant a v16 bugfix release?",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/19541",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/19541/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/19541/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/19541/events",
        "html_url": "https://github.com/facebook/react/issues/19541",
        "id": 673793917,
        "node_id": "MDU6SXNzdWU2NzM3OTM5MTc=",
        "number": 19541,
        "title": "Bug: Context doesn't work when exported from a package with multiple entrypoints",
        "user": {
            "login": "ROODAY",
            "id": 5439867,
            "node_id": "MDQ6VXNlcjU0Mzk4Njc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/5439867?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ROODAY",
            "html_url": "https://github.com/ROODAY",
            "followers_url": "https://api.github.com/users/ROODAY/followers",
            "following_url": "https://api.github.com/users/ROODAY/following{/other_user}",
            "gists_url": "https://api.github.com/users/ROODAY/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ROODAY/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ROODAY/subscriptions",
            "organizations_url": "https://api.github.com/users/ROODAY/orgs",
            "repos_url": "https://api.github.com/users/ROODAY/repos",
            "events_url": "https://api.github.com/users/ROODAY/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ROODAY/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 155984160,
                "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
                "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
                "name": "Status: Unconfirmed",
                "color": "d4c5f9",
                "default": false,
                "description": "A potential issue that we haven't yet confirmed as a bug"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-08-05T19:30:40Z",
        "updated_at": "2020-08-05T20:49:41Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "React version: **^16.13.1**\r\n\r\nI had some code in my React app that handled loading Firebase and getting an AuthUser. Both the Firebase object and the AuthUser object were stored in their own contexts so they could be used throughout my app, and this worked fine. I then wanted to abstract this functionality into a component library so that I could reuse it easily between projects, and that's where this issue cropped up. I made my library using Neutrino,js since it was recommended on the React docs site, and the \"react-components\" preset for making component libraries creates a separate entrypoint for every file/directory in `src/components`. \r\n\r\nSo in my case, my build directory contained `Firebase.js` and `Session.js`, each of which exported their respective context, However, importing these contexts back into my original React app wouldn't work, as any changes to the value in the context provider (inside the library) would not propagate to the context consumers (outside the library/in my app). I confirmed this by checking the Component tree in dev tools (screenshots [here](https://stackoverflow.com/questions/63267934/react-context-from-library-not-updating-in-consumer)).\r\n\r\nI eventually got around this issue by following [this answer](https://stackoverflow.com/a/60655639/3325942) from SO. Basically just make an index.js that imports/re-exports everything so that it's all considered one module. This made it work, but now my imports went from\r\n```\r\nimport AuthuserContext, {withAuthentication} from \"my-library/Session\";\r\nimport Firebase, {withFirebase} from \"my-library/Firebase\";\r\n```\r\nto\r\n```\r\nimport {AuthuserContext, withAuthentication, Firebase, withFirebase} from \"my-library\";\r\n```\r\nwhich feels a lot messier. Is there a fix for this or is this expected behavior for Contexts? And if so, can that change in the future?\r\n\r\n## Steps To Reproduce\r\n\r\n1. Bootstrap a Neutrino.js react-components preset.\r\n2. Create a file that exports a context and updates the value asynchronously (in my case loads firebase, but you could probably even do a setTimeout).\r\n3. Create a file that uses that contexts provider.\r\n4. Create an HOC that wraps an element with contexts consumer.\r\n5. Build the Neutrino.js project and import the HOC into another project and wrap a component with it. Notice that the consumer won't ever update.\r\n\r\nThe buggy context code is available on [this commit](https://github.com/BUUPE/React-Components/tree/a34cfd58c00dface71031c3ba551cc778c1b8e83) of my component library.\r\n\r\n## The current behavior\r\nContext can be used within the module/library it was defined in, but consumers won't update if they are defined outside the library.\r\n\r\n## The expected behavior\r\nContext would update anywhere the consumer is,",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/19539",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/19539/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/19539/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/19539/events",
        "html_url": "https://github.com/facebook/react/issues/19539",
        "id": 673738990,
        "node_id": "MDU6SXNzdWU2NzM3Mzg5OTA=",
        "number": 19539,
        "title": "Bug: Crash after update",
        "user": {
            "login": "krishnaTORQUE",
            "id": 4960568,
            "node_id": "MDQ6VXNlcjQ5NjA1Njg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4960568?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/krishnaTORQUE",
            "html_url": "https://github.com/krishnaTORQUE",
            "followers_url": "https://api.github.com/users/krishnaTORQUE/followers",
            "following_url": "https://api.github.com/users/krishnaTORQUE/following{/other_user}",
            "gists_url": "https://api.github.com/users/krishnaTORQUE/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/krishnaTORQUE/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/krishnaTORQUE/subscriptions",
            "organizations_url": "https://api.github.com/users/krishnaTORQUE/orgs",
            "repos_url": "https://api.github.com/users/krishnaTORQUE/repos",
            "events_url": "https://api.github.com/users/krishnaTORQUE/events{/privacy}",
            "received_events_url": "https://api.github.com/users/krishnaTORQUE/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 620368407,
                "node_id": "MDU6TGFiZWw2MjAzNjg0MDc=",
                "url": "https://api.github.com/repos/facebook/react/labels/Resolution:%20Needs%20More%20Information",
                "name": "Resolution: Needs More Information",
                "color": "fffde7",
                "default": false,
                "description": null
            },
            {
                "id": 155984160,
                "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
                "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
                "name": "Status: Unconfirmed",
                "color": "d4c5f9",
                "default": false,
                "description": "A potential issue that we haven't yet confirmed as a bug"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "krishnaTORQUE",
            "id": 4960568,
            "node_id": "MDQ6VXNlcjQ5NjA1Njg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4960568?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/krishnaTORQUE",
            "html_url": "https://github.com/krishnaTORQUE",
            "followers_url": "https://api.github.com/users/krishnaTORQUE/followers",
            "following_url": "https://api.github.com/users/krishnaTORQUE/following{/other_user}",
            "gists_url": "https://api.github.com/users/krishnaTORQUE/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/krishnaTORQUE/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/krishnaTORQUE/subscriptions",
            "organizations_url": "https://api.github.com/users/krishnaTORQUE/orgs",
            "repos_url": "https://api.github.com/users/krishnaTORQUE/repos",
            "events_url": "https://api.github.com/users/krishnaTORQUE/events{/privacy}",
            "received_events_url": "https://api.github.com/users/krishnaTORQUE/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "krishnaTORQUE",
                "id": 4960568,
                "node_id": "MDQ6VXNlcjQ5NjA1Njg=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/4960568?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/krishnaTORQUE",
                "html_url": "https://github.com/krishnaTORQUE",
                "followers_url": "https://api.github.com/users/krishnaTORQUE/followers",
                "following_url": "https://api.github.com/users/krishnaTORQUE/following{/other_user}",
                "gists_url": "https://api.github.com/users/krishnaTORQUE/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/krishnaTORQUE/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/krishnaTORQUE/subscriptions",
                "organizations_url": "https://api.github.com/users/krishnaTORQUE/orgs",
                "repos_url": "https://api.github.com/users/krishnaTORQUE/repos",
                "events_url": "https://api.github.com/users/krishnaTORQUE/events{/privacy}",
                "received_events_url": "https://api.github.com/users/krishnaTORQUE/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-08-05T18:01:44Z",
        "updated_at": "2020-08-05T19:30:20Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version:16.13.1\r\n\r\nIt was working until I update react to latest version\r\n\r\nNo issue in development server\r\n\r\nOnce I build the project getting this issue\r\n\r\nSyntaxError: missing } after property list\r\nnote: { opened at line 1, column 1998\r\n\r\nChunkLoadError: Loading chunk 1 failed\r\n/static/js/1.75c86cba.chunk.js",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/19537",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/19537/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/19537/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/19537/events",
        "html_url": "https://github.com/facebook/react/issues/19537",
        "id": 673607767,
        "node_id": "MDU6SXNzdWU2NzM2MDc3Njc=",
        "number": 19537,
        "title": "Bug: Overwriting console.log during rendering",
        "user": {
            "login": "Jack-Works",
            "id": 5390719,
            "node_id": "MDQ6VXNlcjUzOTA3MTk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/5390719?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Jack-Works",
            "html_url": "https://github.com/Jack-Works",
            "followers_url": "https://api.github.com/users/Jack-Works/followers",
            "following_url": "https://api.github.com/users/Jack-Works/following{/other_user}",
            "gists_url": "https://api.github.com/users/Jack-Works/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Jack-Works/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Jack-Works/subscriptions",
            "organizations_url": "https://api.github.com/users/Jack-Works/orgs",
            "repos_url": "https://api.github.com/users/Jack-Works/repos",
            "events_url": "https://api.github.com/users/Jack-Works/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Jack-Works/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 710375792,
                "node_id": "MDU6TGFiZWw3MTAzNzU3OTI=",
                "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Discussion",
                "name": "Type: Discussion",
                "color": "fef2c0",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2020-08-05T15:00:00Z",
        "updated_at": "2020-08-05T15:37:16Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: latest\r\n\r\n## Steps To Reproduce\r\n\r\n```jsx\r\nfunction App() {\r\n  return <h1 onClick={console.log}>h1</h1>;\r\n  // console.log is replaced by \"disableLog\" so I can't log any event.\r\n  return <h1 onClick={x => console.log(x)}>h1</h1>;\r\n  // have to do this\r\n}\r\n```\r\n\r\nPrevious discussion at https://github.com/facebook/react/pull/15894#issuecomment-668542243\r\n\r\n@trueadm says:\r\n\r\n> <blockquote>Jack says: console.log is replaced by \"disableLog\" so I can't log any event.</blockquote>\r\n> That's to be expected, React replaces console.log during render. Just keep with the callback approach, as in reality the render should be side-effect free and console.log is actually a form of side-effect (and one only used really for debugging).\r\n\r\n@Jack-Works says:\r\n\r\n> The console replacement part is confusing to me. You can't cancel all side effects, after all, this is making people(me) confused and doesn't really resolve the side effect problem.\r\n\r\n@trueadm says:\r\n\r\n> This is something we do in DEV to avoid confusion around double renders (to catch side-effects that might cause problems for concurrent mode). Last time I checked, in regards to console.log, we override it so you don't get duplicate console logs. Duplicate console logs might be even more confusing otherwise.\r\n\r\n@bvaughn says:\r\n\r\n> @trueadm is correct. React only overrides the console methods for the second render, which it only does in DEV. This prevents duplicate logs from being in the console and confusing people. We understand that it might be confusing as well to see a console.log statement that doesn't print anything– but we think that's a less common case.\r\n\r\n@Jack-Works says:\r\n\r\n> Actually, duplicate logs will warn the developer about they shouldn't do side effect things out of useEffect. It actually helps developers to figure out what is \"double render\" or things about the concurrent mode. I think React should at lease preserve the log and warn the developer instead of drop everything they logged, it's super confusing\r\n\r\n@bvaughn says:\r\n\r\n> We test changes like this within Facebook before we deploy them to open source. From early testing experience, duplicate logs confuse developers into thinking that either React or their application code is broken and triggering multiple renderers. Silencing the log before the second render dramatically reduced the reports we got from confused devs.\r\n\r\n@Jack-Works says:\r\n\r\n> It's not resolving the problem. It's hiding the problem. And people (me) start to thinking return `<h1 onClick={console.log}>h1</h1>`; why the event is not fired.\r\n> Another approach might be, if it is not in the rendering stage, let `disableLog` function behave like a normal log, this will reduce the harm.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/19531",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/19531/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/19531/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/19531/events",
        "html_url": "https://github.com/facebook/react/pull/19531",
        "id": 673189029,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDYzMDk0ODEz",
        "number": 19531,
        "title": "Nesting Fixture",
        "user": {
            "login": "gaearon",
            "id": 810438,
            "node_id": "MDQ6VXNlcjgxMDQzOA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaearon",
            "html_url": "https://github.com/gaearon",
            "followers_url": "https://api.github.com/users/gaearon/followers",
            "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
            "organizations_url": "https://api.github.com/users/gaearon/orgs",
            "repos_url": "https://api.github.com/users/gaearon/repos",
            "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaearon/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 196858374,
                "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
                "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
                "name": "CLA Signed",
                "color": "e7e7e7",
                "default": false,
                "description": null
            },
            {
                "id": 1775958285,
                "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
                "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
                "name": "React Core Team",
                "color": "9149d1",
                "default": false,
                "description": "Opened by a member of the React Core Team"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2020-08-05T01:43:44Z",
        "updated_at": "2020-08-06T16:01:24Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "pull_request": {
            "url": "https://api.github.com/repos/facebook/react/pulls/19531",
            "html_url": "https://github.com/facebook/react/pull/19531",
            "diff_url": "https://github.com/facebook/react/pull/19531.diff",
            "patch_url": "https://github.com/facebook/react/pull/19531.patch"
        },
        "body": "This is a fixture that demonstrates a build and runtime setup for using two copies of React on the same page.\r\n\r\n**Note: this is usually a really bad idea. But in large legacy apps, sometimes the only alternative is to stop upgrading React altogether.** This fixture is meant to demonstrate an alternative solution — partial (e.g. per-route) upgrades/holdouts.\r\n\r\n![demo](https://user-images.githubusercontent.com/810438/89361319-ec056f00-d6c2-11ea-92aa-0e49e3a9aaeb.gif)\r\n\r\n\r\n* **Hooks are working:** People often struggle setting this up (https://github.com/facebook/react/issues/13991). In particular, the constraint is that the version of `react` seen by a component needs to be the same version of `react` that is seen by `react-dom` that rendered this component.\r\n\r\n* **No bundler config tweaks:** This is intentionally using an unejected CRA. I wanted to show an approach that should work regardless of your bundler (as long as it respects the Node resolution mechanism). Also works with both Yarn and npm.\r\n\r\n* **Context bridge:** This demo includes passing context through a cross-React bridge. This is vital in real apps. Without it, you can't use anything — even a router — in practice. This example includes React Router to show that. (It relies on a private API, but I'll add a scary comment, and I got an okay from @mjackson for this particular use case).\r\n\r\n* **Code splitting:** You pretty much never want to load two Reacts if it's avoidable. So ideally it would only be used for lazy-loaded code, e.g. a legacy popup dialog or a legacy route. To encourage this, I made a `lazyLegacyRoot(() => import(...))` wrapper that is similar in spirit to `lazy()`. You use `<Suspense>` to show the loading state.\r\n\r\n* **Code sharing:** When you split code between legacy and modern folders, there will be a bunch of React code you want to share. But since we rely on Node resolution, we can't have the same files having different meaning of the `react` import depending on whether they were imported from `src/modern` or `src/legacy`. As a workaround, I added `src/shared` folder that is being watched. Every change in it gets replicated by a watcher into `src/modern/shared` and `src/legacy/shared` which are ignored in source control. This is pretty low-tech and the part I like about this setup the least. But it seems like that's also the part you can replace on your own if you're ready to fiddle with the configs. Note that this *does* mean this code gets duplicated between the two bundles. I don't have a good solution to that.\r\n\r\n* **Third-party libraries:** We have three `package.json`: one at the root for build tooling, one in `src/modern/package.json` and one in `src/legacy/package.json`. Reacts are defined in the nested ones. This is where you put third-party libraries that depend on React. The nested `package.json`s may use different libraries or even different versions. Note that `src/shared` has no `package.json`, but files there *can* use third-party libs (else we wouldn't be able to share Hooks and Components). Again, this works because `src/shared/*` gets copied into `shared` subdirectories of both `modern` and `legacy`.\r\n\r\nAs an exercise and to verify this setup works, I converted [a simple (but not trivial) app](https://github.com/dalemartyn/podcast-player) to this setup locally, extracting one of the component subtrees into `legacy`. The most frustrating part of this process was figuring out which code needs to be `shared` and which parts are not, and then changing a bunch of relative paths. The rest went fairly smoothly and the end result worked as soon as I bridged all contexts. So overall I think this works but maybe it could be more ergonomic. However, I still think requiring fiddling with config would make this example a lot less versatile and useful.\r\n\r\nThis repo in particular demonstrates a `legacy` app nested into a `modern` one. But we could swap folders and do the opposite. There's nothing in particular that enforces the direction.\r\n\r\n**Note:** In React repo I notice an issue where `npm start` shows a bunch of ESLint warnings, but a second `npm start` works. I couldn't reproduce it outside of our repo so this seems like a CRA quirk that's unrelated to this demo.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/19530",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/19530/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/19530/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/19530/events",
        "html_url": "https://github.com/facebook/react/issues/19530",
        "id": 673147643,
        "node_id": "MDU6SXNzdWU2NzMxNDc2NDM=",
        "number": 19530,
        "title": "Bug: \"Unspecified error\" some of the time in IE11 in iframe",
        "user": {
            "login": "mparizeau-pdftron",
            "id": 15879431,
            "node_id": "MDQ6VXNlcjE1ODc5NDMx",
            "avatar_url": "https://avatars2.githubusercontent.com/u/15879431?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mparizeau-pdftron",
            "html_url": "https://github.com/mparizeau-pdftron",
            "followers_url": "https://api.github.com/users/mparizeau-pdftron/followers",
            "following_url": "https://api.github.com/users/mparizeau-pdftron/following{/other_user}",
            "gists_url": "https://api.github.com/users/mparizeau-pdftron/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mparizeau-pdftron/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mparizeau-pdftron/subscriptions",
            "organizations_url": "https://api.github.com/users/mparizeau-pdftron/orgs",
            "repos_url": "https://api.github.com/users/mparizeau-pdftron/repos",
            "events_url": "https://api.github.com/users/mparizeau-pdftron/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mparizeau-pdftron/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 127893911,
                "node_id": "MDU6TGFiZWwxMjc4OTM5MTE=",
                "url": "https://api.github.com/repos/facebook/react/labels/Component:%20DOM",
                "name": "Component: DOM",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 40929151,
                "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
                "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
                "name": "Type: Bug",
                "color": "b60205",
                "default": false,
                "description": null
            },
            {
                "id": 717031390,
                "node_id": "MDU6TGFiZWw3MTcwMzEzOTA=",
                "url": "https://api.github.com/repos/facebook/react/labels/good%20first%20issue",
                "name": "good first issue",
                "color": "6ce26a",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-08-04T23:33:58Z",
        "updated_at": "2020-08-05T16:24:08Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "React version: 16.12\r\n\r\n## Steps To Reproduce\r\n\r\n1. Open http://cygnetuat.sterlingdatarooms.com/PDFTronClientTest/ in IE11\r\n2. Wait for the application to load in the iframe\r\n\r\n## The current behavior\r\nSometimes an \"Unspecified error\" will appear in the console and the viewer in the iframe won't load\r\n\r\n![image](https://user-images.githubusercontent.com/15879431/89355081-60162780-d66f-11ea-829a-fbbf2e8e1f32.png)\r\n\r\nUnfortunately it is not 100% reproducible. Sometimes the error won't occur. I'm also having trouble creating a minimal sample to reproduce this.\r\n\r\n## The expected behavior\r\nThere is no error.\r\n\r\n## Investigation\r\n\r\nThe relevant line in the callstack where the error is occurring is here https://github.com/facebook/react/blob/03de849af03996b7477420c97de7741ce1214149/packages/react-dom/src/client/ReactDOMInput.js#L415\r\n\r\nI suspect it might be the same issue discussed here https://github.com/Availity/react-block-ui/issues/18\r\n>This was a real pain to track down, but apparently IE 11 will just throw Unspecified error. when accessing document.activeElement from an <iframe>, sometimes.\r\n\r\nThe solution they used to fix the error was to use this function instead of accessing document.activeElement directly https://gist.github.com/Alex1990/046a6553dc83e22dd6f4\r\n\r\nIdeally this function could be used inside React as well. I am also happy to use a workaround if there is one.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/19525",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/19525/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/19525/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/19525/events",
        "html_url": "https://github.com/facebook/react/pull/19525",
        "id": 672788053,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDYyNzYzMTYz",
        "number": 19525,
        "title": "test(event-handle): replace eventHandle to clean function",
        "user": {
            "login": "monkingxue",
            "id": 16385790,
            "node_id": "MDQ6VXNlcjE2Mzg1Nzkw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/16385790?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/monkingxue",
            "html_url": "https://github.com/monkingxue",
            "followers_url": "https://api.github.com/users/monkingxue/followers",
            "following_url": "https://api.github.com/users/monkingxue/following{/other_user}",
            "gists_url": "https://api.github.com/users/monkingxue/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/monkingxue/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/monkingxue/subscriptions",
            "organizations_url": "https://api.github.com/users/monkingxue/orgs",
            "repos_url": "https://api.github.com/users/monkingxue/repos",
            "events_url": "https://api.github.com/users/monkingxue/events{/privacy}",
            "received_events_url": "https://api.github.com/users/monkingxue/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 196858374,
                "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
                "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
                "name": "CLA Signed",
                "color": "e7e7e7",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2020-08-04T13:20:21Z",
        "updated_at": "2020-08-04T14:37:15Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "pull_request": {
            "url": "https://api.github.com/repos/facebook/react/pulls/19525",
            "html_url": "https://github.com/facebook/react/pull/19525",
            "diff_url": "https://github.com/facebook/react/pull/19525.diff",
            "patch_url": "https://github.com/facebook/react/pull/19525.patch"
        },
        "body": "<!--\r\n  Thanks for submitting a pull request!\r\n  We appreciate you spending the time to work on these changes. Please provide enough information so that others can review your pull request. The three fields below are mandatory.\r\n\r\n  Before submitting a pull request, please make sure the following is done:\r\n\r\n  1. Fork [the repository](https://github.com/facebook/react) and create your branch from `master`.\r\n  2. Run `yarn` in the repository root.\r\n  3. If you've fixed a bug or added code that should be tested, add tests!\r\n  4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\r\n  5. Run `yarn test-prod` to test in the production environment. It supports the same options as `yarn test`.\r\n  6. If you need a debugger, run `yarn debug-test --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\r\n  7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n  8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\n  Learn more about contributing: https://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\nIn the event-handle test module, part of the place where the clean function should be used is incorrectly used event-handle.\r\n\r\n## Test Plan\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes the user interface. -->\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/19523",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/19523/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/19523/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/19523/events",
        "html_url": "https://github.com/facebook/react/pull/19523",
        "id": 672495847,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDYyNTIwNTU4",
        "number": 19523,
        "title": "Double Invoke Effects in __DEV__",
        "user": {
            "login": "lunaruan",
            "id": 2735514,
            "node_id": "MDQ6VXNlcjI3MzU1MTQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2735514?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lunaruan",
            "html_url": "https://github.com/lunaruan",
            "followers_url": "https://api.github.com/users/lunaruan/followers",
            "following_url": "https://api.github.com/users/lunaruan/following{/other_user}",
            "gists_url": "https://api.github.com/users/lunaruan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lunaruan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lunaruan/subscriptions",
            "organizations_url": "https://api.github.com/users/lunaruan/orgs",
            "repos_url": "https://api.github.com/users/lunaruan/repos",
            "events_url": "https://api.github.com/users/lunaruan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lunaruan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 196858374,
                "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
                "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
                "name": "CLA Signed",
                "color": "e7e7e7",
                "default": false,
                "description": null
            },
            {
                "id": 1775958285,
                "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
                "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
                "name": "React Core Team",
                "color": "9149d1",
                "default": false,
                "description": "Opened by a member of the React Core Team"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "bvaughn",
            "id": 29597,
            "node_id": "MDQ6VXNlcjI5NTk3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/29597?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bvaughn",
            "html_url": "https://github.com/bvaughn",
            "followers_url": "https://api.github.com/users/bvaughn/followers",
            "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
            "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
            "organizations_url": "https://api.github.com/users/bvaughn/orgs",
            "repos_url": "https://api.github.com/users/bvaughn/repos",
            "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bvaughn/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "bvaughn",
                "id": 29597,
                "node_id": "MDQ6VXNlcjI5NTk3",
                "avatar_url": "https://avatars0.githubusercontent.com/u/29597?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/bvaughn",
                "html_url": "https://github.com/bvaughn",
                "followers_url": "https://api.github.com/users/bvaughn/followers",
                "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
                "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
                "organizations_url": "https://api.github.com/users/bvaughn/orgs",
                "repos_url": "https://api.github.com/users/bvaughn/repos",
                "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
                "received_events_url": "https://api.github.com/users/bvaughn/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 6,
        "created_at": "2020-08-04T04:26:32Z",
        "updated_at": "2020-08-06T15:18:27Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "pull_request": {
            "url": "https://api.github.com/repos/facebook/react/pulls/19523",
            "html_url": "https://github.com/facebook/react/pull/19523",
            "diff_url": "https://github.com/facebook/react/pull/19523.diff",
            "patch_url": "https://github.com/facebook/react/pull/19523.patch"
        },
        "body": "This PR double invokes effects in `__DEV__` mode. \r\n\r\nWe are thinking about unmounting layout and/or passive effects for a hidden tree. To understand potential issues with this, we want to double invoke effects. This PR changes the behavior in DEV when an effect runs from `create()` to `create() -> destroy() -> create()`. The effect cleanup function will still be called before the effect runs in both dev and prod. (Note: this DEV behavior isn't final and still might change.)",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/19506",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/19506/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/19506/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/19506/events",
        "html_url": "https://github.com/facebook/react/pull/19506",
        "id": 669902862,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDYwMjIyMTAz",
        "number": 19506,
        "title": "add failing test (#18051)",
        "user": {
            "login": "delca85",
            "id": 4076043,
            "node_id": "MDQ6VXNlcjQwNzYwNDM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/4076043?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/delca85",
            "html_url": "https://github.com/delca85",
            "followers_url": "https://api.github.com/users/delca85/followers",
            "following_url": "https://api.github.com/users/delca85/following{/other_user}",
            "gists_url": "https://api.github.com/users/delca85/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/delca85/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/delca85/subscriptions",
            "organizations_url": "https://api.github.com/users/delca85/orgs",
            "repos_url": "https://api.github.com/users/delca85/repos",
            "events_url": "https://api.github.com/users/delca85/events{/privacy}",
            "received_events_url": "https://api.github.com/users/delca85/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 196858374,
                "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
                "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
                "name": "CLA Signed",
                "color": "e7e7e7",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-07-31T14:56:28Z",
        "updated_at": "2020-08-01T05:47:25Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "pull_request": {
            "url": "https://api.github.com/repos/facebook/react/pulls/19506",
            "html_url": "https://github.com/facebook/react/pull/19506",
            "diff_url": "https://github.com/facebook/react/pull/19506.diff",
            "patch_url": "https://github.com/facebook/react/pull/19506.patch"
        },
        "body": "<!--\r\n  Thanks for submitting a pull request!\r\n  We appreciate you spending the time to work on these changes. Please provide enough information so that others can review your pull request. The three fields below are mandatory.\r\n\r\n  Before submitting a pull request, please make sure the following is done:\r\n\r\n  1. Fork [the repository](https://github.com/facebook/react) and create your branch from `master`.\r\n  2. Run `yarn` in the repository root.\r\n  3. If you've fixed a bug or added code that should be tested, add tests!\r\n  4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\r\n  5. Run `yarn test-prod` to test in the production environment. It supports the same options as `yarn test`.\r\n  6. If you need a debugger, run `yarn debug-test --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\r\n  7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n  8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\n  Learn more about contributing: https://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\n<!-- Explain the **motivation** for making this change. What existing problem does the pull request solve? -->\r\n\r\nTrying to solve #18051  and #18937 .\r\n`exhaustive-deps` eslint rule does not recognize a `JSXIdentifier` as needed dependency.\r\n\r\nThis is because eslint scope `.references` does not include JSX.\r\nI have pushed only a failing test with the aim to keep on working on it.\r\n\r\n## Test Plan\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes the user interface. -->\r\nFailing test where an hook uses a `JSXIdentifier` that is properly added to deps array while the eslint rules marks it as unnecessary.\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/19491",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/19491/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/19491/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/19491/events",
        "html_url": "https://github.com/facebook/react/issues/19491",
        "id": 668502158,
        "node_id": "MDU6SXNzdWU2Njg1MDIxNTg=",
        "number": 19491,
        "title": "Memory leak after component unload",
        "user": {
            "login": "rocky-one",
            "id": 26345259,
            "node_id": "MDQ6VXNlcjI2MzQ1MjU5",
            "avatar_url": "https://avatars0.githubusercontent.com/u/26345259?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rocky-one",
            "html_url": "https://github.com/rocky-one",
            "followers_url": "https://api.github.com/users/rocky-one/followers",
            "following_url": "https://api.github.com/users/rocky-one/following{/other_user}",
            "gists_url": "https://api.github.com/users/rocky-one/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rocky-one/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rocky-one/subscriptions",
            "organizations_url": "https://api.github.com/users/rocky-one/orgs",
            "repos_url": "https://api.github.com/users/rocky-one/repos",
            "events_url": "https://api.github.com/users/rocky-one/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rocky-one/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2020-07-30T08:45:20Z",
        "updated_at": "2020-08-05T06:21:45Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "React version: 16.13.1\r\n\r\nDescription\r\nData passed by props after uninstalling a component is still referenced and not GC.\r\n\r\n```\r\nimport React from 'react';\r\nclass App extends React.Component {\r\n  state = {\r\n    show: false,\r\n    userObj: {\r\n      arr: []\r\n    }\r\n  }\r\n  onClick = () => {\r\n    let show = !this.state.show\r\n    let arr = []\r\n    if (show) {\r\n      for (let i = 0; i < 100000; i++) {\r\n        arr.push({\r\n          name: `rocky_${i}`\r\n        })\r\n      }\r\n    }\r\n    this.setState({\r\n      show,\r\n      userObj: {\r\n        arr\r\n      }\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div>\r\n          <button onClick={this.onClick} style={{margin: '10px'}}>\r\n            {this.state.show ? 'uninstall components' : 'install components'}\r\n          </button>\r\n        </div>\r\n        {this.state.show && <Test userObj={this.state.userObj}></Test>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass Test extends React.Component {\r\n  render() {\r\n    return (\r\n      <div style={{width: '200px', height: '100px', border: '1px solid #ccc', margin: '10px'}}>\r\n        I am a test component\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n```\r\n**1. component not installed**\r\n![image](https://user-images.githubusercontent.com/26345259/88901082-e81cbb80-d282-11ea-8719-50334a4c7e57.png)\r\n\r\n\r\n**2. after installation of components**\r\n![image](https://user-images.githubusercontent.com/26345259/88901263-2c0fc080-d283-11ea-84d0-9daacc3426b2.png)\r\n\r\n\r\n**3.component unloaded**\r\n![image](https://user-images.githubusercontent.com/26345259/88901447-5feae600-d283-11ea-84e7-5eb9fb362311.png)\r\n\r\n[The sample code is here](https://codesandbox.io/s/tender-dewdney-l5zcs?file=/src/App.js)\r\n\r\n**I understand that component unloaded memory should return to the original 4.6MB, but component unloaded memory is still 8.8MB. Is this a memory leak? I am a novice still ask grant instruction, thank!**\r\n\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/19451",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/19451/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/19451/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/19451/events",
        "html_url": "https://github.com/facebook/react/pull/19451",
        "id": 665529868,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDU2NTc3MDc4",
        "number": 19451,
        "title": "Added a nice React logo gif to make the readme.md file interesting.",
        "user": {
            "login": "trupti0101",
            "id": 45890293,
            "node_id": "MDQ6VXNlcjQ1ODkwMjkz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/45890293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/trupti0101",
            "html_url": "https://github.com/trupti0101",
            "followers_url": "https://api.github.com/users/trupti0101/followers",
            "following_url": "https://api.github.com/users/trupti0101/following{/other_user}",
            "gists_url": "https://api.github.com/users/trupti0101/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/trupti0101/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/trupti0101/subscriptions",
            "organizations_url": "https://api.github.com/users/trupti0101/orgs",
            "repos_url": "https://api.github.com/users/trupti0101/repos",
            "events_url": "https://api.github.com/users/trupti0101/events{/privacy}",
            "received_events_url": "https://api.github.com/users/trupti0101/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 196858374,
                "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
                "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
                "name": "CLA Signed",
                "color": "e7e7e7",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-07-25T06:45:05Z",
        "updated_at": "2020-07-30T17:45:53Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "pull_request": {
            "url": "https://api.github.com/repos/facebook/react/pulls/19451",
            "html_url": "https://github.com/facebook/react/pull/19451",
            "diff_url": "https://github.com/facebook/react/pull/19451.diff",
            "patch_url": "https://github.com/facebook/react/pull/19451.patch"
        },
        "body": "<!--\r\n  Thanks for submitting a pull request!\r\n  We appreciate you spending the time to work on these changes. Please provide enough information so that others can review your pull request. The three fields below are mandatory.\r\n\r\n  Before submitting a pull request, please make sure the following is done:\r\n\r\n  1. Fork [the repository](https://github.com/facebook/react) and create your branch from `master`.\r\n  2. Run `yarn` in the repository root.\r\n  3. If you've fixed a bug or added code that should be tested, add tests!\r\n  4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\r\n  5. Run `yarn test-prod` to test in the production environment. It supports the same options as `yarn test`.\r\n  6. If you need a debugger, run `yarn debug-test --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\r\n  7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n  8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\n  Learn more about contributing: https://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\n<!-- Explain the **motivation** for making this change. What existing problem does the pull request solve? -->\r\n\r\n## Test Plan\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes the user interface. -->\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/19408",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/19408/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/19408/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/19408/events",
        "html_url": "https://github.com/facebook/react/pull/19408",
        "id": 661204201,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDUyOTAxMTg0",
        "number": 19408,
        "title": "Fix for react-tester-renderer swallowing error boundary logs",
        "user": {
            "login": "rickhanlonii",
            "id": 2440089,
            "node_id": "MDQ6VXNlcjI0NDAwODk=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2440089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rickhanlonii",
            "html_url": "https://github.com/rickhanlonii",
            "followers_url": "https://api.github.com/users/rickhanlonii/followers",
            "following_url": "https://api.github.com/users/rickhanlonii/following{/other_user}",
            "gists_url": "https://api.github.com/users/rickhanlonii/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rickhanlonii/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rickhanlonii/subscriptions",
            "organizations_url": "https://api.github.com/users/rickhanlonii/orgs",
            "repos_url": "https://api.github.com/users/rickhanlonii/repos",
            "events_url": "https://api.github.com/users/rickhanlonii/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rickhanlonii/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 196858374,
                "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
                "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
                "name": "CLA Signed",
                "color": "e7e7e7",
                "default": false,
                "description": null
            },
            {
                "id": 1775958285,
                "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
                "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
                "name": "React Core Team",
                "color": "9149d1",
                "default": false,
                "description": "Opened by a member of the React Core Team"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2020-07-20T00:27:22Z",
        "updated_at": "2020-08-05T23:50:59Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "pull_request": {
            "url": "https://api.github.com/repos/facebook/react/pulls/19408",
            "html_url": "https://github.com/facebook/react/pull/19408",
            "diff_url": "https://github.com/facebook/react/pull/19408.diff",
            "patch_url": "https://github.com/facebook/react/pull/19408.patch"
        },
        "body": "## Overview\r\n\r\nPreviously, when using react-test-renderer, errors caught by error boundaries would not log the original error message, it would _only_ print the addendum \"The above error occurred in the <ErrorThrowingComponent> component\".\r\n\r\nThis PR fixes that behavior so that the test render logs errors even when error boundaries catch them, just like ReactDOM.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/19401",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/19401/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/19401/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/19401/events",
        "html_url": "https://github.com/facebook/react/pull/19401",
        "id": 659813611,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDUxNjIxMjAx",
        "number": 19401,
        "title": "Add feature flag for setting update lane priority",
        "user": {
            "login": "rickhanlonii",
            "id": 2440089,
            "node_id": "MDQ6VXNlcjI0NDAwODk=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2440089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rickhanlonii",
            "html_url": "https://github.com/rickhanlonii",
            "followers_url": "https://api.github.com/users/rickhanlonii/followers",
            "following_url": "https://api.github.com/users/rickhanlonii/following{/other_user}",
            "gists_url": "https://api.github.com/users/rickhanlonii/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rickhanlonii/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rickhanlonii/subscriptions",
            "organizations_url": "https://api.github.com/users/rickhanlonii/orgs",
            "repos_url": "https://api.github.com/users/rickhanlonii/repos",
            "events_url": "https://api.github.com/users/rickhanlonii/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rickhanlonii/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 196858374,
                "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
                "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
                "name": "CLA Signed",
                "color": "e7e7e7",
                "default": false,
                "description": null
            },
            {
                "id": 1775958285,
                "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
                "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
                "name": "React Core Team",
                "color": "9149d1",
                "default": false,
                "description": "Opened by a member of the React Core Team"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-07-18T01:53:26Z",
        "updated_at": "2020-08-06T03:06:31Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "pull_request": {
            "url": "https://api.github.com/repos/facebook/react/pulls/19401",
            "html_url": "https://github.com/facebook/react/pull/19401",
            "diff_url": "https://github.com/facebook/react/pull/19401.diff",
            "patch_url": "https://github.com/facebook/react/pull/19401.patch"
        },
        "body": "## Overview\r\n\r\nWrap calls to set update lane priority in a feature flag so it doesn't impact the stable release channel.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/19400",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/19400/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/19400/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/19400/events",
        "html_url": "https://github.com/facebook/react/issues/19400",
        "id": 659785548,
        "node_id": "MDU6SXNzdWU2NTk3ODU1NDg=",
        "number": 19400,
        "title": "Bug: onFocus and onBlur has inconsistent batching",
        "user": {
            "login": "samcooke98",
            "id": 787007,
            "node_id": "MDQ6VXNlcjc4NzAwNw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/787007?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/samcooke98",
            "html_url": "https://github.com/samcooke98",
            "followers_url": "https://api.github.com/users/samcooke98/followers",
            "following_url": "https://api.github.com/users/samcooke98/following{/other_user}",
            "gists_url": "https://api.github.com/users/samcooke98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/samcooke98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/samcooke98/subscriptions",
            "organizations_url": "https://api.github.com/users/samcooke98/orgs",
            "repos_url": "https://api.github.com/users/samcooke98/repos",
            "events_url": "https://api.github.com/users/samcooke98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/samcooke98/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1205087127,
                "node_id": "MDU6TGFiZWwxMjA1MDg3MTI3",
                "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Concurrent%20Mode",
                "name": "Component: Concurrent Mode",
                "color": "ffccd3",
                "default": false,
                "description": ""
            },
            {
                "id": 40929151,
                "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
                "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
                "name": "Type: Bug",
                "color": "b60205",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-07-18T01:00:15Z",
        "updated_at": "2020-08-06T14:25:11Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: `0.0.0-experimental-4c8c98ab9` with concurrent mode. \r\n\r\n## Steps To Reproduce\r\n\r\n1. In the provided code sandbox, click on a `Todo` component\r\n2. Tab back and forth between the two \r\n3. At inconsistent times, there will be a frame where the focus hasn't left, but the outline isn't rendered. The outline is only drawn when focus is in. Because there is a brief frame without the border, the todo visibly flickers. \r\n\r\nLink to code example: \r\n\r\nhttps://codesandbox.io/s/samc-focus-demo-9jyso?file=/package.json:201-229\r\n\r\nVideo; https://drive.google.com/file/d/18PW8M_VvE3Nau7NkdQq4X8En_Vcen_xQ/view?usp=sharing\r\nFocus shifts multiple times at the beginning, without a flicker. \r\nAround the 6 seconds mark, there is a flicker.\r\n\r\n\r\nPhoto of the frame; \r\n![image](https://user-images.githubusercontent.com/787007/87840493-3e811600-c8e3-11ea-8323-076faaabc8c7.png)\r\n\r\n\r\n## The current behavior\r\n\r\nAt times there is an 'impossible' frame, where the focus has been set to false, despite the focus just having shifted from one element to another within the same div. \r\n\r\n## The expected behavior\r\nI'm not sure if this pattern is something that is concurrent mode incompatible or something... \r\n\r\nBut regardless, I'd expect the behaviour to be consistent - eg for `focus` and `blur` events to be combined into a single frame.\r\n\r\nThis codepen shows the expected outcome with vanila JS https://codepen.io/samcooke98/pen/OJMaXvx\r\n\r\n\r\n## Related?\r\nhttps://github.com/facebook/react/issues/19385\r\n\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/19385",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/19385/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/19385/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/19385/events",
        "html_url": "https://github.com/facebook/react/issues/19385",
        "id": 658347743,
        "node_id": "MDU6SXNzdWU2NTgzNDc3NDM=",
        "number": 19385,
        "title": "Bug: setState in onFocus breaks onChange event in Concurrent Mode ",
        "user": {
            "login": "airhorns",
            "id": 158950,
            "node_id": "MDQ6VXNlcjE1ODk1MA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/158950?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/airhorns",
            "html_url": "https://github.com/airhorns",
            "followers_url": "https://api.github.com/users/airhorns/followers",
            "following_url": "https://api.github.com/users/airhorns/following{/other_user}",
            "gists_url": "https://api.github.com/users/airhorns/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/airhorns/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/airhorns/subscriptions",
            "organizations_url": "https://api.github.com/users/airhorns/orgs",
            "repos_url": "https://api.github.com/users/airhorns/repos",
            "events_url": "https://api.github.com/users/airhorns/events{/privacy}",
            "received_events_url": "https://api.github.com/users/airhorns/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1205087127,
                "node_id": "MDU6TGFiZWwxMjA1MDg3MTI3",
                "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Concurrent%20Mode",
                "name": "Component: Concurrent Mode",
                "color": "ffccd3",
                "default": false,
                "description": ""
            },
            {
                "id": 40929151,
                "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
                "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
                "name": "Type: Bug",
                "color": "b60205",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2020-07-16T16:17:42Z",
        "updated_at": "2020-08-06T14:25:23Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Using concurrent mode on `0.0.0-experimental-7f28234f8` makes `<Checkbox/>` from Baseweb stop firing `onChange` events.\r\n\r\nBaseweb is a popular set of React components that reflects real world usage patterns such that maybe it should work right off the bat with Concurrent mode. Feel free to close if you're confident this is a userland problem and not a framework problem, but I think this may indicate an incompatibility between Concurrent Mode and Legacy mode that isn't documented or warned about it if so, because `<Checkbox/>` isn't doing anything too fancy and doesn't use deprecated APIs or warn when rendered in Strict mode or Concurrent mode. I feel like that means it's supposed to just work, right? \r\n\r\nReact version: `0.0.0-experimental-7f28234f8`\r\n\r\n## Steps To Reproduce\r\n\r\n1. Click a `<Checkbox/>` rendered using Legacy mode and note that it checks\r\n2. Click a `<Checkbox/>` rendered using Concurrent mode and note that it does not check \r\n\r\nSee issue here: https://baseweb-react-concurrent-checkbox.stackblitz.io (edit here: https://stackblitz.com/edit/baseweb-react-concurrent-checkbox?file=src/index.js)\r\n\r\nI've been trying to debug and haven't found any smoking guns yet, but there are some interesting tidbits I can share that might allude to if this is a React bug or a Baseweb bug:\r\n - `onFocus` and `onBlur` handlers fire just fine on both modes \r\n - `<Checkbox/>` doesn't use `findDOMNode` or other deprecated APIs in Concurrent mode as best I can tell. No warnings are fired when rendering it in Strict mode or Concurrent + Strict mode\r\n - focusing the `Checkbox` by tabbing and pressing space checks and fires the `onChange` handler on both Legacy and Concurrent mode\r\n - Wide swaths of the rest of baseweb work just fine in Concurrent mode\r\n\r\nSee https://github.com/uber/baseweb/issues/3476 for the `baseweb` issue.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/19317",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/19317/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/19317/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/19317/events",
        "html_url": "https://github.com/facebook/react/pull/19317",
        "id": 655157949,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ3NzM1Mzk0",
        "number": 19317,
        "title": "Fixed some minor Typos",
        "user": {
            "login": "Ashikpaul",
            "id": 17526871,
            "node_id": "MDQ6VXNlcjE3NTI2ODcx",
            "avatar_url": "https://avatars2.githubusercontent.com/u/17526871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ashikpaul",
            "html_url": "https://github.com/Ashikpaul",
            "followers_url": "https://api.github.com/users/Ashikpaul/followers",
            "following_url": "https://api.github.com/users/Ashikpaul/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ashikpaul/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ashikpaul/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ashikpaul/subscriptions",
            "organizations_url": "https://api.github.com/users/Ashikpaul/orgs",
            "repos_url": "https://api.github.com/users/Ashikpaul/repos",
            "events_url": "https://api.github.com/users/Ashikpaul/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ashikpaul/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 196858374,
                "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
                "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
                "name": "CLA Signed",
                "color": "e7e7e7",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2020-07-11T07:43:59Z",
        "updated_at": "2020-08-04T22:31:37Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "pull_request": {
            "url": "https://api.github.com/repos/facebook/react/pulls/19317",
            "html_url": "https://github.com/facebook/react/pull/19317",
            "diff_url": "https://github.com/facebook/react/pull/19317.diff",
            "patch_url": "https://github.com/facebook/react/pull/19317.patch"
        },
        "body": "## Summary\r\n\r\nFound some typos in the error codes\r\n\r\n## Test Plan\r\n\r\nThis PR doesn't require a test plan\r\n\r\nThank you\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/18826",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/18826/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/18826/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/18826/events",
        "html_url": "https://github.com/facebook/react/issues/18826",
        "id": 612442974,
        "node_id": "MDU6SXNzdWU2MTI0NDI5NzQ=",
        "number": 18826,
        "title": "Bug [eslint hooks plugin]: Allow conditional hooks based on static constants",
        "user": {
            "login": "adrianhelvik",
            "id": 7836058,
            "node_id": "MDQ6VXNlcjc4MzYwNTg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/7836058?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adrianhelvik",
            "html_url": "https://github.com/adrianhelvik",
            "followers_url": "https://api.github.com/users/adrianhelvik/followers",
            "following_url": "https://api.github.com/users/adrianhelvik/following{/other_user}",
            "gists_url": "https://api.github.com/users/adrianhelvik/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adrianhelvik/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adrianhelvik/subscriptions",
            "organizations_url": "https://api.github.com/users/adrianhelvik/orgs",
            "repos_url": "https://api.github.com/users/adrianhelvik/repos",
            "events_url": "https://api.github.com/users/adrianhelvik/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adrianhelvik/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1775957182,
                "node_id": "MDU6TGFiZWwxNzc1OTU3MTgy",
                "url": "https://api.github.com/repos/facebook/react/labels/Resolution:%20Stale",
                "name": "Resolution: Stale",
                "color": "e6e6e6",
                "default": false,
                "description": "Automatically closed due to inactivity"
            },
            {
                "id": 155984160,
                "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
                "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
                "name": "Status: Unconfirmed",
                "color": "d4c5f9",
                "default": false,
                "description": "A potential issue that we haven't yet confirmed as a bug"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-05-05T08:50:42Z",
        "updated_at": "2020-08-03T09:06:58Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "This scenario should not trigger a warning as it follows the rules of hooks.\r\n\r\n```javascript\r\nimport React from 'react'\r\n\r\nconst SOME_STATIC_CONDITION = process.env.SOME_STATIC_CONDITION === 'true'\r\n\r\nfunction App() {\r\n  if (SOME_STATIC_CONDITION) {\r\n    React.useEffect(() => {\r\n      console.log('This should only run when compiled with SOME_STATIC_CONDITION=true')\r\n    })\r\n  }\r\n  return null\r\n}\r\n```\r\n\r\nIn general, constant values defined at the top level are immutable and should not trigger this warning. Same thing with process.env.*.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/18821",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/18821/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/18821/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/18821/events",
        "html_url": "https://github.com/facebook/react/issues/18821",
        "id": 612155859,
        "node_id": "MDU6SXNzdWU2MTIxNTU4NTk=",
        "number": 18821,
        "title": "Bug: ARIA Attribute Reflection",
        "user": {
            "login": "jonathantneal",
            "id": 188426,
            "node_id": "MDQ6VXNlcjE4ODQyNg==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/188426?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonathantneal",
            "html_url": "https://github.com/jonathantneal",
            "followers_url": "https://api.github.com/users/jonathantneal/followers",
            "following_url": "https://api.github.com/users/jonathantneal/following{/other_user}",
            "gists_url": "https://api.github.com/users/jonathantneal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jonathantneal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jonathantneal/subscriptions",
            "organizations_url": "https://api.github.com/users/jonathantneal/orgs",
            "repos_url": "https://api.github.com/users/jonathantneal/repos",
            "events_url": "https://api.github.com/users/jonathantneal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jonathantneal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 127893911,
                "node_id": "MDU6TGFiZWwxMjc4OTM5MTE=",
                "url": "https://api.github.com/repos/facebook/react/labels/Component:%20DOM",
                "name": "Component: DOM",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 620368407,
                "node_id": "MDU6TGFiZWw2MjAzNjg0MDc=",
                "url": "https://api.github.com/repos/facebook/react/labels/Resolution:%20Needs%20More%20Information",
                "name": "Resolution: Needs More Information",
                "color": "fffde7",
                "default": false,
                "description": null
            },
            {
                "id": 1775957182,
                "node_id": "MDU6TGFiZWwxNzc1OTU3MTgy",
                "url": "https://api.github.com/repos/facebook/react/labels/Resolution:%20Stale",
                "name": "Resolution: Stale",
                "color": "e6e6e6",
                "default": false,
                "description": "Automatically closed due to inactivity"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2020-05-04T20:43:38Z",
        "updated_at": "2020-08-03T01:07:00Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "React version: 16.13.1\r\n\r\n## Steps To Reproduce\r\n\r\n1. Implement the [gov.uk \"breadcrumbs\" component](https://design-system.service.gov.uk/components/breadcrumbs/) in React.\r\n2. Use the [ARIA 1.2](https://www.w3.org/TR/wai-aria-1.2/#idl-interface) `ariaCurrent` property, as available in Edge 81, Chrome 81, and Safari 13.\r\n3. See warning:\r\n   ```\r\n   Warning: Invalid ARIA attribute `ariaCurrent`. Did you mean `aria-current`?\r\n   ```\r\n\r\nLink to code example: [https://codesandbox.io/s/bold-glitter-lpfpq](https://codesandbox.io/s/bold-glitter-lpfpq?file=/src/App.js)\r\n\r\n```jsx\r\nfunction Breadcrumbs() {\r\n  return (\r\n    <ol>\r\n      <li>\r\n        <a href=\"/\">\r\n          Home\r\n        </a>\r\n      </li>\r\n      <li>\r\n        <a href=\"/passports\">\r\n          Passports, travel and living abroad\r\n        </a>\r\n      </li>\r\n      <li ariaCurrent=\"page\">\r\n        Travel abroad\r\n      </li>\r\n    </ol>\r\n  );\r\n}\r\n```\r\n\r\nThese properties are helpful reflections that will also be followed by implementations of [`aria*Elements` properties](https://w3c.github.io/aria/#reflection) which would eliminate the need for an `id` by every reference. This is _not_ a bug report on the support of those properties, but they are mentioned to present the higher value these properties will have over dash-less shorthands. I would (naively) expect these (more simple) reflections to worthy of support on their own merits of being implemented web standards.\r\n\r\n## The current behavior\r\n\r\nThe `ariaCurrent` property is not applied, an `ariacurrent` attribute is applied, and a warning is displayed in development.\r\n\r\n ```\r\n Warning: Invalid ARIA attribute `ariaCurrent`. Did you mean `aria-current`?\r\n ```\r\n\r\n## The expected behavior\r\n\r\nThe `ariaCurrent` property is applied.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/18815",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/18815/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/18815/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/18815/events",
        "html_url": "https://github.com/facebook/react/pull/18815",
        "id": 612037522,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDEzMDc5NTMz",
        "number": 18815,
        "title": "chore: remove usage of deprecated Jest functions",
        "user": {
            "login": "SimenB",
            "id": 1404810,
            "node_id": "MDQ6VXNlcjE0MDQ4MTA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1404810?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SimenB",
            "html_url": "https://github.com/SimenB",
            "followers_url": "https://api.github.com/users/SimenB/followers",
            "following_url": "https://api.github.com/users/SimenB/following{/other_user}",
            "gists_url": "https://api.github.com/users/SimenB/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SimenB/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SimenB/subscriptions",
            "organizations_url": "https://api.github.com/users/SimenB/orgs",
            "repos_url": "https://api.github.com/users/SimenB/repos",
            "events_url": "https://api.github.com/users/SimenB/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SimenB/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 196858374,
                "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
                "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
                "name": "CLA Signed",
                "color": "e7e7e7",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2020-05-04T17:21:11Z",
        "updated_at": "2020-08-02T18:54:01Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "pull_request": {
            "url": "https://api.github.com/repos/facebook/react/pulls/18815",
            "html_url": "https://github.com/facebook/react/pull/18815",
            "diff_url": "https://github.com/facebook/react/pull/18815.diff",
            "patch_url": "https://github.com/facebook/react/pull/18815.patch"
        },
        "body": "<!--\r\n  Thanks for submitting a pull request!\r\n  We appreciate you spending the time to work on these changes. Please provide enough information so that others can review your pull request. The three fields below are mandatory.\r\n\r\n  Before submitting a pull request, please make sure the following is done:\r\n\r\n  1. Fork [the repository](https://github.com/facebook/react) and create your branch from `master`.\r\n  2. Run `yarn` in the repository root.\r\n  3. If you've fixed a bug or added code that should be tested, add tests!\r\n  4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\r\n  5. Run `yarn test-prod` to test in the production environment. It supports the same options as `yarn test`.\r\n  6. If you need a debugger, run `yarn debug-test --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\r\n  7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n  8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\r\n  9. Run the [Flow](https://flowtype.org/) typechecks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\n  Learn more about contributing: https://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\nJest 26 is coming today or tomorrow, and we've removed `require.requireActual`. I just ran the lint rule `jest/no-deprecated-functions` on the code base, which also fixes a couple of removals scheduled for Jest 27. Doesn't hurt to be prepared 🙂 \r\n\r\n## Test Plan\r\n\r\nGreen CI\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes the user interface. -->\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/18721",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/18721/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/18721/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/18721/events",
        "html_url": "https://github.com/facebook/react/pull/18721",
        "id": 605862048,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDA4MTg4NTY1",
        "number": 18721,
        "title": "Bug/Test: Add fuzzing tests for React.Suspense",
        "user": {
            "login": "dubzzz",
            "id": 5300235,
            "node_id": "MDQ6VXNlcjUzMDAyMzU=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5300235?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dubzzz",
            "html_url": "https://github.com/dubzzz",
            "followers_url": "https://api.github.com/users/dubzzz/followers",
            "following_url": "https://api.github.com/users/dubzzz/following{/other_user}",
            "gists_url": "https://api.github.com/users/dubzzz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dubzzz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dubzzz/subscriptions",
            "organizations_url": "https://api.github.com/users/dubzzz/orgs",
            "repos_url": "https://api.github.com/users/dubzzz/repos",
            "events_url": "https://api.github.com/users/dubzzz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dubzzz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 196858374,
                "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
                "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
                "name": "CLA Signed",
                "color": "e7e7e7",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 14,
        "created_at": "2020-04-23T20:50:32Z",
        "updated_at": "2020-08-01T19:22:02Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "pull_request": {
            "url": "https://api.github.com/repos/facebook/react/pulls/18721",
            "html_url": "https://github.com/facebook/react/pull/18721",
            "diff_url": "https://github.com/facebook/react/pull/18721.diff",
            "patch_url": "https://github.com/facebook/react/pull/18721.patch"
        },
        "body": "\r\n<!--\r\n  Thanks for submitting a pull request!\r\n  We appreciate you spending the time to work on these changes. Please provide enough information so that others can review your pull request. The three fields below are mandatory.\r\n\r\n  Before submitting a pull request, please make sure the following is done:\r\n\r\n  1. Fork [the repository](https://github.com/facebook/react) and create your branch from `master`.\r\n  2. Run `yarn` in the repository root.\r\n  3. If you've fixed a bug or added code that should be tested, add tests!\r\n  4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\r\n  5. Run `yarn test-prod` to test in the production environment. It supports the same options as `yarn test`.\r\n  6. If you need a debugger, run `yarn debug-test --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\r\n  7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n  8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\r\n  9. Run the [Flow](https://flowtype.org/) typechecks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\n  Learn more about contributing: https://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\n<!-- Explain the **motivation** for making this change. What existing problem does the pull request solve? -->\r\n\r\nThis PR introduces a new test for `React.Suspense`. The suggested test is fully based on fuzzing and relies on fast-check library to handle fuzzing and shrinking. It reported the following error - _after shrinking_ - on my side:\r\n```\r\n[Scheduler`\r\n      -> [task#2] sequence::Scheduling \"8\" with priority 3 resolved\r\n      -> [task#1] promise::Request for \"447b0ed\" resolved with value \"resolved 447b0ed!\"`,\"447b0ed\",[{\"priority\":3,\"text\":\"8\"}],<function :: [\"447b0ed\"] => true, [\"8\"] => true>]\r\n```\r\nReproduced by https://codesandbox.io/s/strange-frost-d4ujl?file=/src/App.js\r\n\r\nIssue related to #18669\r\n\r\n**As adding a new library into React might be problematic, feel free to close this PR if it does not make sense or is not useful anymore.** Not adding this library would require to develop a scheduler like the one offered by fast-check in the test suite of react.\r\n\r\n## Test Plan\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes the user interface. -->\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/18594",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/18594/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/18594/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/18594/events",
        "html_url": "https://github.com/facebook/react/issues/18594",
        "id": 599159112,
        "node_id": "MDU6SXNzdWU1OTkxNTkxMTI=",
        "number": 18594,
        "title": "feat: allow multiple opaque identifiers in HTML attributes",
        "user": {
            "login": "eps1lon",
            "id": 12292047,
            "node_id": "MDQ6VXNlcjEyMjkyMDQ3",
            "avatar_url": "https://avatars3.githubusercontent.com/u/12292047?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eps1lon",
            "html_url": "https://github.com/eps1lon",
            "followers_url": "https://api.github.com/users/eps1lon/followers",
            "following_url": "https://api.github.com/users/eps1lon/following{/other_user}",
            "gists_url": "https://api.github.com/users/eps1lon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eps1lon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eps1lon/subscriptions",
            "organizations_url": "https://api.github.com/users/eps1lon/orgs",
            "repos_url": "https://api.github.com/users/eps1lon/repos",
            "events_url": "https://api.github.com/users/eps1lon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eps1lon/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 127893911,
                "node_id": "MDU6TGFiZWwxMjc4OTM5MTE=",
                "url": "https://api.github.com/repos/facebook/react/labels/Component:%20DOM",
                "name": "Component: DOM",
                "color": "fef2c0",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2020-04-13T21:54:33Z",
        "updated_at": "2020-08-02T18:15:43Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "react version: #17322\r\nOriginal: https://github.com/facebook/react/pull/17322#issuecomment-613104823\r\n\r\nCurrently only a single value from `useOpaqueIdentifier` (unreleased) can be passed to HTML attributes. However, there are HTML attributes which support multiple ids (IDREFS) like `aria-labelledby`. This can be used to implement various patterns such as: \r\n```jsx\r\nexport default function App() {\r\n  const taxpayerId = React.unstable_useOpaqueIdentifier();\r\n  const spouseId = React.unstable_useOpaqueIdentifier();\r\n  const w2GrossId = React.unstable_useOpaqueIdentifier();\r\n  const dividendsId = React.unstable_useOpaqueIdentifier();\r\n  return (\r\n    <table>\r\n      <tbody>\r\n        <tr>\r\n          <td />\r\n          <th id={taxpayerId}>Taxpayer</th>\r\n          <th id={spouseId}>Spouse</th>\r\n        </tr>\r\n\r\n        <tr>\r\n          <th id={w2GrossId}>W2 Gross</th>\r\n          <td>\r\n            <input type=\"text\" aria-labelledby={[taxpayerId, w2GrossId]} />\r\n          </td>\r\n          <td>\r\n            <input type=\"text\" aria-labelledby={[spouseId, w2GrossId]} />\r\n          </td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <th id={dividendsId}>Dividends</th>\r\n          <td>\r\n            <input type=\"text\" aria-labelledby={[taxpayerId, dividendsId]} />\r\n          </td>\r\n          <td>\r\n            <input type=\"text\" aria-labelledby={[spouseId, dividendsId]} />\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n````\r\n-- https://codesandbox.io/s/useopaqueidentifier-for-idrefs-ocnm4\r\n\r\nThis example is from https://www.w3.org/WAI/GL/wiki/Using_aria-labelledby_to_concatenate_a_label_from_several_text_nodes\r\n\r\nThis currently almost works but it concatenates the ids with `\",\"` (default toString of arrays) instead of `\" \"`.\r\n\r\n`<button aria-labelledby={[opaqueIdentifier1, opaqueIdentifier1]} />` is to me the most intuitive one since we're passing a list of ids. \r\n\r\nEdit:\r\nRemoved the collapsible listbox example since that pattern has some a11y issue.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/18290",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/18290/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/18290/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/18290/events",
        "html_url": "https://github.com/facebook/react/issues/18290",
        "id": 579845048,
        "node_id": "MDU6SXNzdWU1Nzk4NDUwNDg=",
        "number": 18290,
        "title": "Bug: IE11 throws error Assignment to read-only properties is not allowed in strict mode",
        "user": {
            "login": "Pinka",
            "id": 5305497,
            "node_id": "MDQ6VXNlcjUzMDU0OTc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5305497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Pinka",
            "html_url": "https://github.com/Pinka",
            "followers_url": "https://api.github.com/users/Pinka/followers",
            "following_url": "https://api.github.com/users/Pinka/following{/other_user}",
            "gists_url": "https://api.github.com/users/Pinka/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Pinka/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Pinka/subscriptions",
            "organizations_url": "https://api.github.com/users/Pinka/orgs",
            "repos_url": "https://api.github.com/users/Pinka/repos",
            "events_url": "https://api.github.com/users/Pinka/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Pinka/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 69105383,
                "node_id": "MDU6TGFiZWw2OTEwNTM4Mw==",
                "url": "https://api.github.com/repos/facebook/react/labels/Browser:%20IE",
                "name": "Browser: IE",
                "color": "c7def8",
                "default": false,
                "description": null
            },
            {
                "id": 155984160,
                "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
                "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
                "name": "Status: Unconfirmed",
                "color": "d4c5f9",
                "default": false,
                "description": "A potential issue that we haven't yet confirmed as a bug"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2020-03-12T10:38:37Z",
        "updated_at": "2020-07-31T17:01:08Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "When working in development mode in IE11 error is thrown in file \r\nreact-dom.development.js line 185. \r\n\r\nError: \"Assignment to read-only properties is not allowed in strict mode\"\r\nwindow.event is readOnly variable and IE11 is strict about it.\r\n\r\n![image](https://user-images.githubusercontent.com/5305497/76511927-8509c400-645c-11ea-89c4-9f38a6e0a778.png)\r\n\r\n\r\nReact version: 16.13.0\r\n\r\nIn production build there is no error as this code block is not included.\r\n\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/18262",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/18262/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/18262/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/18262/events",
        "html_url": "https://github.com/facebook/react/pull/18262",
        "id": 578365711,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mzg1OTU5OTA0",
        "number": 18262,
        "title": "RFC Implementation: Speculative work",
        "user": {
            "login": "gnoff",
            "id": 2716369,
            "node_id": "MDQ6VXNlcjI3MTYzNjk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2716369?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gnoff",
            "html_url": "https://github.com/gnoff",
            "followers_url": "https://api.github.com/users/gnoff/followers",
            "following_url": "https://api.github.com/users/gnoff/following{/other_user}",
            "gists_url": "https://api.github.com/users/gnoff/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gnoff/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gnoff/subscriptions",
            "organizations_url": "https://api.github.com/users/gnoff/orgs",
            "repos_url": "https://api.github.com/users/gnoff/repos",
            "events_url": "https://api.github.com/users/gnoff/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gnoff/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 196858374,
                "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
                "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
                "name": "CLA Signed",
                "color": "e7e7e7",
                "default": false,
                "description": null
            },
            {
                "id": 1775957182,
                "node_id": "MDU6TGFiZWwxNzc1OTU3MTgy",
                "url": "https://api.github.com/repos/facebook/react/labels/Resolution:%20Stale",
                "name": "Resolution: Stale",
                "color": "e6e6e6",
                "default": false,
                "description": "Automatically closed due to inactivity"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-03-10T06:31:08Z",
        "updated_at": "2020-08-03T05:06:56Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "pull_request": {
            "url": "https://api.github.com/repos/facebook/react/pulls/18262",
            "html_url": "https://github.com/facebook/react/pull/18262",
            "diff_url": "https://github.com/facebook/react/pull/18262.diff",
            "patch_url": "https://github.com/facebook/react/pull/18262.patch"
        },
        "body": "## Summary\r\n\r\nThis is a long-lived PR to discuss development of an implementation for https://github.com/reactjs/rfcs/pull/150\r\n\r\nThe current state is a Proof-of-Concept implementation of speculative work along with context-selectors.\r\n\r\nThere are currently four experiments embedded in this PR. some will be removed soon\r\n\r\n## selectors for useContext\r\n\r\nflag `enableContextSelectors`\r\n\r\nthis replaces `readContext` as the implementation for `useContext` and replaces with a stateful mount and update hook which can track previous values. It is not inherently 'faster' by itself since it does not affect context propagation and therefore the selector has no opportunity to bail out of work but when used with `reifyNextWork` or `speculativeWork` it can help reduce the amount of work done on a render for components that only read a small part of the context value\r\n\r\nwhat's next:\r\nI plan on reimplementing outside of hooks so any context reader can use a selector and take advantage of more aggressive bailouts\r\n\r\n## Context propagation by Reader\r\n\r\nflag `enableContextReaderPropagation`\r\n\r\nthis feature replaces the tree-walking context propagation for one that tracks direct readers. It is analagous to each reader being a `useReducer` hook and having the `dispatchAction` function held by the Provider. propagation is then mostly just dispatching a new state. It's not literally using this functionality and there are some tricks to make it faster on mount and only do the more complicated tracking in advanced cases when the set of contexts read from changes from render to render.\r\n\r\nThe key benefit here is the growth in work time for propagation is O(readers) instead of O(size of tree)\r\n\r\nwhat's next:\r\nI plan on moving where we track whether we need advanced mode into the prepare step to solve some uncommon memory leaks\r\nI plan on experimenting with a super fast mode where we only activate reader tracking after a provider has a changed value at least once. this would enable passive contexts to add no mount or unmount costs\r\n\r\n## Reify Next Work\r\n\r\nflag `enableReifyNextWork`\r\n\r\nThis is the primary feature of Speculative Work. When this flag is enabled the bailoutOnAlreadyCompleted work will be modified so that before deciding whether to go deeper into the subtree the boundary of the next fibers that have work will be visited with a walking algorithm similar to context propagation. when a fiber with work is found and if that fiber type is supported (FunctionComponent for instance) a semi-eager bailout can run which will determine if that speculative update is now reified? (i.e. an update went from \"this might need to an update\" to \"there is no update\" or \"there is definitely\" an update)\r\n\r\nIf reification happens we've hit a work boundary and move on. once we exhaust the sub-tree up to the next work boudary and return back to our bailout we see if there is still any work to do deeper. the rest of the bailout logic remains unchanged\r\n\r\nthis is superior to speculative mode because the tree walking algo is lighter since we aren't doing the full 'work' logic, and because it is simpler in that we don't have to juggle \"are we doing work on current or on work in progress\"\r\n\r\nwhat's next:\r\nexplore doing a full render call during reifyNextWork and stashing the result. if work is needed we can use the precomputed workInProgress instead of doing it a second time. this is actually 'safe' because we no none of the intermediate work could have affected the render\r\nAlso look into how we might support class components\r\n\r\n## DEPRECATED Speculative Work Mode\r\n\r\nflag `enableSpeculativeWork`\r\n\r\nThis was my initial implementation of speculative work and it was good but `reifyNextWork` is better. Essentially if we did a bailoutOnAlreadyCompleted work we would not create workInProgress fibers for children but would instead start work on the current tree. Then if we got somewhere where an update on curren required workInProgress we would reify the ancestor current tree back to the last WIP fiber before we started speculative mode and continue from there.\r\n\r\nThis worked and did offer some performance enhancements in some cases but there are a lot of extra edge cases tracking whether you are in speculative mode or not and how to handle switching between those modes\r\n\r\nThis feature is technically compatible with reifyNextWork but doesn't really offer any additional performance advantages and so it should probably be abandoned\r\n\r\nWhat's next:\r\nremove from codebase",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/17953",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/17953/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/17953/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/17953/events",
        "html_url": "https://github.com/facebook/react/issues/17953",
        "id": 558503636,
        "node_id": "MDU6SXNzdWU1NTg1MDM2MzY=",
        "number": 17953,
        "title": "Bug: useReducer runs the queued updates with new props",
        "user": {
            "login": "a-c-sreedhar-reddy",
            "id": 16081083,
            "node_id": "MDQ6VXNlcjE2MDgxMDgz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/16081083?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/a-c-sreedhar-reddy",
            "html_url": "https://github.com/a-c-sreedhar-reddy",
            "followers_url": "https://api.github.com/users/a-c-sreedhar-reddy/followers",
            "following_url": "https://api.github.com/users/a-c-sreedhar-reddy/following{/other_user}",
            "gists_url": "https://api.github.com/users/a-c-sreedhar-reddy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/a-c-sreedhar-reddy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/a-c-sreedhar-reddy/subscriptions",
            "organizations_url": "https://api.github.com/users/a-c-sreedhar-reddy/orgs",
            "repos_url": "https://api.github.com/users/a-c-sreedhar-reddy/repos",
            "events_url": "https://api.github.com/users/a-c-sreedhar-reddy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/a-c-sreedhar-reddy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1109410193,
                "node_id": "MDU6TGFiZWwxMTA5NDEwMTkz",
                "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Hooks",
                "name": "Component: Hooks",
                "color": "c2f27b",
                "default": false,
                "description": ""
            },
            {
                "id": 40929151,
                "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
                "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
                "name": "Type: Bug",
                "color": "b60205",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 13,
        "created_at": "2020-02-01T07:58:03Z",
        "updated_at": "2020-08-03T19:21:07Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 16.8.0\r\n\r\n## Steps To Reproduce\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example:\r\nhttps://codesandbox.io/s/usereducer-wfcmq Link to codesandbox.\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\nInitially step is 0. So for every step react does not rerender due to this https://github.com/facebook/react/blob/master/packages/react-reconciler/src/ReactFiberHooks.js#L1347. But state updates are queued. So when `step` changes all the state updates are done and hence creates a bug by adding the new step prop.\r\n\r\nhttps://overreacted.io/a-complete-guide-to-useeffect/#why-usereducer-is-the-cheat-mode-of-hooks",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/17918",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/17918/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/17918/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/17918/events",
        "html_url": "https://github.com/facebook/react/issues/17918",
        "id": 556197312,
        "node_id": "MDU6SXNzdWU1NTYxOTczMTI=",
        "number": 17918,
        "title": "Bug: infinite loop when a set state hook is called in a global handler",
        "user": {
            "login": "OrKoN",
            "id": 399150,
            "node_id": "MDQ6VXNlcjM5OTE1MA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/399150?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/OrKoN",
            "html_url": "https://github.com/OrKoN",
            "followers_url": "https://api.github.com/users/OrKoN/followers",
            "following_url": "https://api.github.com/users/OrKoN/following{/other_user}",
            "gists_url": "https://api.github.com/users/OrKoN/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/OrKoN/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/OrKoN/subscriptions",
            "organizations_url": "https://api.github.com/users/OrKoN/orgs",
            "repos_url": "https://api.github.com/users/OrKoN/repos",
            "events_url": "https://api.github.com/users/OrKoN/events{/privacy}",
            "received_events_url": "https://api.github.com/users/OrKoN/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 127893911,
                "node_id": "MDU6TGFiZWwxMjc4OTM5MTE=",
                "url": "https://api.github.com/repos/facebook/react/labels/Component:%20DOM",
                "name": "Component: DOM",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 40929151,
                "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
                "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
                "name": "Type: Bug",
                "color": "b60205",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2020-01-28T13:06:29Z",
        "updated_at": "2020-08-06T00:42:37Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nTo be honest, I am not 100% sure it's a bug. Perhaps my code is badly written but I don't know why it's not working or how to rewrite it in the proper way. \r\n\r\nReact version: 16.12.0\r\n\r\n## Steps To Reproduce\r\n\r\n```\r\nfunction Hello() {\r\n    const [s, setS] = React.useState(1);\r\n    const print = () => {\r\n      setS(s + 1);\r\n      setTimeout(() => {\r\n      \twindow.print();\r\n      }, 600);\r\n      window.onafterprint = () => {\r\n      \tsetS(s - 1);\r\n      }\r\n    }\r\n    return <div>{s}<button onClick={print}>print</button></div>;\r\n}\r\n\r\n```\r\n\r\n1. Open this jsfiddle https://jsfiddle.net/z4ku39t2/2 or try the code above\r\n2. Click Print button and cancel the print dialog\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example: https://jsfiddle.net/z4ku39t2/2\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\n\r\nWhen the setS is called in the onafterprint handler, the app enters an infinite loop with 100% cpu usage so you won't be able to do anything on the page. The profiler shows that it happens inside React.\r\n\r\n## The expected behavior\r\n\r\nThe setS successfully modifies the state and the component re-renders.\r\n\r\nBrowser: Version 79.0.3945.130 (Official Build) (64-bit)",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/17473",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/17473/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/17473/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/17473/events",
        "html_url": "https://github.com/facebook/react/pull/17473",
        "id": 529262758,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ2MTcxMTMz",
        "number": 17473,
        "title": "React Devtools Component: Add hotkeys to start inspecting node",
        "user": {
            "login": "gejimayu",
            "id": 25560419,
            "node_id": "MDQ6VXNlcjI1NTYwNDE5",
            "avatar_url": "https://avatars0.githubusercontent.com/u/25560419?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gejimayu",
            "html_url": "https://github.com/gejimayu",
            "followers_url": "https://api.github.com/users/gejimayu/followers",
            "following_url": "https://api.github.com/users/gejimayu/following{/other_user}",
            "gists_url": "https://api.github.com/users/gejimayu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gejimayu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gejimayu/subscriptions",
            "organizations_url": "https://api.github.com/users/gejimayu/orgs",
            "repos_url": "https://api.github.com/users/gejimayu/repos",
            "events_url": "https://api.github.com/users/gejimayu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gejimayu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 196858374,
                "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
                "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
                "name": "CLA Signed",
                "color": "e7e7e7",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2019-11-27T10:41:41Z",
        "updated_at": "2020-08-02T02:44:39Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "pull_request": {
            "url": "https://api.github.com/repos/facebook/react/pulls/17473",
            "html_url": "https://github.com/facebook/react/pull/17473",
            "diff_url": "https://github.com/facebook/react/pull/17473.diff",
            "patch_url": "https://github.com/facebook/react/pull/17473.patch"
        },
        "body": "Issue is here https://github.com/facebook/react/issues/17298\r\n\r\nHotkey: Cmd Shift X (mac) or Ctrl Shift X (others)\r\n\r\n![hotkey](https://user-images.githubusercontent.com/25560419/69716735-9c3ed300-1145-11ea-9788-7f311d59bfeb.gif)\r\n\r\n\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/17281",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/17281/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/17281/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/17281/events",
        "html_url": "https://github.com/facebook/react/issues/17281",
        "id": 518001617,
        "node_id": "MDU6SXNzdWU1MTgwMDE2MTc=",
        "number": 17281,
        "title": "react-refresh: Dependent functions/data don't trigger refresh",
        "user": {
            "login": "Lokeh",
            "id": 2687140,
            "node_id": "MDQ6VXNlcjI2ODcxNDA=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2687140?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lokeh",
            "html_url": "https://github.com/Lokeh",
            "followers_url": "https://api.github.com/users/Lokeh/followers",
            "following_url": "https://api.github.com/users/Lokeh/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lokeh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lokeh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lokeh/subscriptions",
            "organizations_url": "https://api.github.com/users/Lokeh/orgs",
            "repos_url": "https://api.github.com/users/Lokeh/repos",
            "events_url": "https://api.github.com/users/Lokeh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lokeh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 710375792,
                "node_id": "MDU6TGFiZWw3MTAzNzU3OTI=",
                "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Discussion",
                "name": "Type: Discussion",
                "color": "fef2c0",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2019-11-05T20:13:09Z",
        "updated_at": "2020-07-31T13:51:30Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Do you want to request a *feature* or report a *bug*?**\r\n\r\nBoth/neither?\r\n\r\n**What is the current behavior?**\r\n\r\nCurrently, react-refresh marks each component whose `type` and/or `signature` has changed as \"dirty\" and will either re-render or re-mount those components selectively.\r\n\r\nThe problem occurs when the dev tooling (webpack, parcel, etc.) loads a module that exports functions or data that are used inside of components, but aren't registered components themselves. For example, a utility function that concatenates a string:\r\n\r\n```js\r\nexport greet(name) {\r\n  return `Hello, ${name}!`;\r\n}\r\n```\r\n\r\nChanging the returned string to `Yo, ${name}!` would trigger this module to reload in the browser, but because components which depended on it don't reload, the old greeting will persist \r\nuntil the next render of each dependent component.\r\n\r\n(BTW in actuality, some tooling will reload immediate dependents of modules that are reloaded in order to get around similar problems. You can extend the dependency chain from two to three modules, where `a.js` depends on `b.js` depends on `c.js`, and you will get the same result when editing `c.js`)\r\n\r\nWhat this forces tooling to do is apply a heuristic to try and guess whether a given module should be refreshed, vs. completely restart the app in order to cause all components to re-mount and pick up any changes that wouldn't be picked up by react-refresh.\r\n\r\nThe problems with the heuristic approach is:\r\n- each dev tool needs to implement this logic, leading to more potential for bugs\r\n- it leads to a degradation of hot reloading capabilities based on what your module exports. not obvious at all on it's face and will lead people to twisting their code base to route around this\r\n- It's very unfriendly to compile-to-JS languages like ReasonML, ClojureScript, etc. which might have different default semantics for what is public / private, different conventions for naming components, etc. which make it difficult to detect whether a module is \"safe\" to refresh\r\n\r\n**What is the expected behavior?**\r\n\r\nThat components depended on newly loaded code will pick up those changes correctly, without losing state.\r\n\r\nA potential (maybe naive?) solution to this in react-refresh is, instead of only re-rendering the components marked as dirty (due to a different `type` being registered), to _re-render from the root_ while maintaining hooks state. If components' signatures have changed, then re-mount.\r\n\r\nI've read through and kind of grok most of the code in react-refresh, but I'm not sure how this would impact the way that the reconciler currently handles the HMR stuff. This is as much of a question, as it is a request: could this be a viable solution?\r\n\r\nI appreciate your time and energy in reading through this. I'm very excited about having first-class support for hot reloading in React, as it's been something that I've loved ever since seeing the first demo of it. I hope that this issue can help create a way to provide a consistently excellent dev experience across tools/platforms/languages!\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nReact 16.11",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/17208",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/17208/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/17208/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/17208/events",
        "html_url": "https://github.com/facebook/react/issues/17208",
        "id": 513948819,
        "node_id": "MDU6SXNzdWU1MTM5NDg4MTk=",
        "number": 17208,
        "title": "Devtools tabs should not appear in chrome-extension pages when using react-devtools as an entry point",
        "user": {
            "login": "nickmccurdy",
            "id": 927220,
            "node_id": "MDQ6VXNlcjkyNzIyMA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/927220?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nickmccurdy",
            "html_url": "https://github.com/nickmccurdy",
            "followers_url": "https://api.github.com/users/nickmccurdy/followers",
            "following_url": "https://api.github.com/users/nickmccurdy/following{/other_user}",
            "gists_url": "https://api.github.com/users/nickmccurdy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nickmccurdy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nickmccurdy/subscriptions",
            "organizations_url": "https://api.github.com/users/nickmccurdy/orgs",
            "repos_url": "https://api.github.com/users/nickmccurdy/repos",
            "events_url": "https://api.github.com/users/nickmccurdy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nickmccurdy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 710573595,
                "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
                "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
                "name": "Component: Developer Tools",
                "color": "fbca04",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 13,
        "created_at": "2019-10-29T14:13:36Z",
        "updated_at": "2020-08-01T20:20:29Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\nBug\r\n\r\n**What is the current behavior?**\r\n\r\nThe React devtools tabs in Chrome devtools can be displayed in extension pages, even though modifying extensions in other extensions is not supported by Chrome, and React devtools are therefore broken.\r\n\r\n![image](https://user-images.githubusercontent.com/927220/67774646-21927300-fa34-11e9-99b5-ea3c62a99e0d.png)\r\n\r\n![image](https://user-images.githubusercontent.com/927220/67774697-38d16080-fa34-11e9-8ea6-fddb21c7bb14.png)\r\n\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\n1. Install Chrome and React devtools\r\n2. Open devtools in a chrome-extension page implemented with React\r\n\r\nExample: [prettier-chrome-extension](https://github.com/prettier/prettier-chrome-extension/tree/options) (install from source and open extension options)\r\n\r\n**What is the expected behavior?**\r\n\r\nReact devtools should not appear when it's not supported, just like when devtools are opened on a page that doesn't use React.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\n- React 16.11.0\r\n- React Developer Tools 4.2.0 (10/3/2019)\r\n- Chrome 78.0.3904.70\r\n- macOS 10.15",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/16265",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/16265/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/16265/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/16265/events",
        "html_url": "https://github.com/facebook/react/issues/16265",
        "id": 475084284,
        "node_id": "MDU6SXNzdWU0NzUwODQyODQ=",
        "number": 16265,
        "title": "Warning for 'exhaustive-deps' keeps asking for the full 'props' object instead of allowing single 'props' properties as dependencies",
        "user": {
            "login": "cbdeveloper",
            "id": 43407798,
            "node_id": "MDQ6VXNlcjQzNDA3Nzk4",
            "avatar_url": "https://avatars2.githubusercontent.com/u/43407798?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cbdeveloper",
            "html_url": "https://github.com/cbdeveloper",
            "followers_url": "https://api.github.com/users/cbdeveloper/followers",
            "following_url": "https://api.github.com/users/cbdeveloper/following{/other_user}",
            "gists_url": "https://api.github.com/users/cbdeveloper/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cbdeveloper/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cbdeveloper/subscriptions",
            "organizations_url": "https://api.github.com/users/cbdeveloper/orgs",
            "repos_url": "https://api.github.com/users/cbdeveloper/repos",
            "events_url": "https://api.github.com/users/cbdeveloper/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cbdeveloper/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 26,
        "created_at": "2019-07-31T11:18:04Z",
        "updated_at": "2020-08-06T00:42:30Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\nBUG (possible) in `eslint-plugin-react-hooks`\r\n\r\n**What is the current behavior?**\r\n\r\nWhen I'm in CodeSanbox using a React Sandbox I can use single properties of the `props` object as dependencies for the `useEffect` hook:\r\n\r\nExample 1:\r\n\r\n```\r\nuseEffect(()=>{\r\n    console.log('Running useEffect...');\r\n    console.log(typeof(props.myProp));\r\n  },[ ]);\r\n```\r\n\r\nThe example 1 gives me the following warning in CodeSandbox environment:\r\n\r\n>React Hook useEffect has a missing dependency: '**props.myProp'**. Either include it or remove the dependency array. (react-hooks/exhaustive-deps) eslint\r\n\r\nAnd if I add `[props.myProp]` to the array, the warning goes away.\r\n\r\nBut the same example 1 in my local environment in VSCode, I get the following warning:\r\n\r\n>React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.eslint(react-hooks/exhaustive-deps)\r\n\r\n**What is the expected behavior?**\r\n\r\nI would expect that I would get the same behavior that I get on CodeSandbox in my local environment in VSCode.\r\n\r\nBut, if I add `[props.myProp]` to the array, the warning DOES NOT go away. Although the code works as intended.\r\n\r\nWhat could be happening? Does CodeSandbox uses a different version of the plugin? Is there any configuration I can make to change this behavior?\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nVersions I'm using:\r\n\r\nDEV:\r\n```\r\n\"eslint\": \"^5.10.0\",\r\n\"eslint-plugin-react\": \"^7.11.1\",\r\n\"eslint-plugin-react-hooks\": \"^1.6.1\",\r\n```\r\n\r\nREGULAR\r\n```\r\n\"react\": \"^16.8.6\",\r\n\"react-dom\": \"^16.8.6\",\r\n```\r\n\r\nVSCODE (probably not causing this issue)\r\n\r\nVersion: 1.32.3 (user setup)\r\nCommit: a3db5be9b5c6ba46bb7555ec5d60178ecc2eaae4\r\nDate: 2019-03-14T23:43:35.476Z\r\nElectron: 3.1.6\r\nChrome: 66.0.3359.181\r\nNode.js: 10.2.0\r\nV8: 6.6.346.32\r\nOS: Windows_NT x64 10.0.17763\r\n\r\n**.eslintrc.json**\r\n\r\n```\r\n{\r\n  \"root\"  :true,\r\n  \"env\": {\r\n    \"browser\": true,\r\n    \"commonjs\": true,\r\n    \"es6\": true,\r\n    \"node\": true\r\n  },\r\n  \"extends\": [\r\n    \"eslint:recommended\",\r\n    \"plugin:react/recommended\",\r\n    \"plugin:import/errors\"\r\n  ],\r\n  \"parser\":\"babel-eslint\",\r\n  \"parserOptions\": {\r\n    \"ecmaVersion\": 2018,\r\n    \"sourceType\": \"module\",\r\n    \"ecmaFeatures\": {\r\n      \"jsx\":true\r\n    }\r\n  },\r\n  \"plugins\":[\r\n    \"react\",\r\n    \"react-hooks\"\r\n  ],\r\n  \"rules\": {\r\n    \"react/prop-types\": 0,\r\n    \"semi\": \"error\",\r\n    \"no-console\": 0,\r\n    \"react-hooks/rules-of-hooks\": \"error\",\r\n    \"react-hooks/exhaustive-deps\": \"warn\"\r\n  },\r\n  \"settings\": {\r\n    \"import/resolver\" : {\r\n      \"alias\" : {\r\n        \"map\" : [\r\n          [\"@components\",\"./src/components\"],\r\n          [\"@constants\",\"./src/constants\"],\r\n          [\"@helpers\",\"./src/helpers\"]\r\n        ],\r\n        \"extensions\": [\".js\"]\r\n      }\r\n    },\r\n    \"react\" : {\r\n      \"version\": \"detect\"\r\n    }\r\n  }\r\n}\r\n\r\n```\r\n\r\n\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/15894",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/15894/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/15894/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/15894/events",
        "html_url": "https://github.com/facebook/react/pull/15894",
        "id": 456518674,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg4NTQ0MjI3",
        "number": 15894,
        "title": "Fix: React cannot render in ShadowRoot",
        "user": {
            "login": "Jack-Works",
            "id": 5390719,
            "node_id": "MDQ6VXNlcjUzOTA3MTk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/5390719?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Jack-Works",
            "html_url": "https://github.com/Jack-Works",
            "followers_url": "https://api.github.com/users/Jack-Works/followers",
            "following_url": "https://api.github.com/users/Jack-Works/following{/other_user}",
            "gists_url": "https://api.github.com/users/Jack-Works/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Jack-Works/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Jack-Works/subscriptions",
            "organizations_url": "https://api.github.com/users/Jack-Works/orgs",
            "repos_url": "https://api.github.com/users/Jack-Works/repos",
            "events_url": "https://api.github.com/users/Jack-Works/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Jack-Works/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 196858374,
                "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
                "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
                "name": "CLA Signed",
                "color": "e7e7e7",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 36,
        "created_at": "2019-06-15T09:17:36Z",
        "updated_at": "2020-08-05T15:00:29Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "pull_request": {
            "url": "https://api.github.com/repos/facebook/react/pulls/15894",
            "html_url": "https://github.com/facebook/react/pull/15894",
            "diff_url": "https://github.com/facebook/react/pull/15894.diff",
            "patch_url": "https://github.com/facebook/react/pull/15894.patch"
        },
        "body": "This pr fix:\r\n\r\n- <del>ReactDOM.findDOMNode not working well with a `ShadowRoot` node</del>\r\n- ReactDOM ensureListening work in this senario\r\n\r\n```html\r\n<custom-element>\r\n    #ShadowRoot: open\r\n        <div>\r\n            <!-- React mount on this node, not the ShadowRoot -->\r\n        </div>\r\n</custom-element>\r\n```",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/15486",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/15486/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/15486/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/15486/events",
        "html_url": "https://github.com/facebook/react/issues/15486",
        "id": 436712099,
        "node_id": "MDU6SXNzdWU0MzY3MTIwOTk=",
        "number": 15486,
        "title": "<details> open attribute not synchronised",
        "user": {
            "login": "afenton90",
            "id": 8963736,
            "node_id": "MDQ6VXNlcjg5NjM3MzY=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/8963736?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/afenton90",
            "html_url": "https://github.com/afenton90",
            "followers_url": "https://api.github.com/users/afenton90/followers",
            "following_url": "https://api.github.com/users/afenton90/following{/other_user}",
            "gists_url": "https://api.github.com/users/afenton90/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/afenton90/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/afenton90/subscriptions",
            "organizations_url": "https://api.github.com/users/afenton90/orgs",
            "repos_url": "https://api.github.com/users/afenton90/repos",
            "events_url": "https://api.github.com/users/afenton90/events{/privacy}",
            "received_events_url": "https://api.github.com/users/afenton90/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 710722093,
                "node_id": "MDU6TGFiZWw3MTA3MjIwOTM=",
                "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Needs%20Investigation",
                "name": "Type: Needs Investigation",
                "color": "fbca04",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2019-04-24T13:55:30Z",
        "updated_at": "2020-08-06T04:22:16Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**What is the current behavior?**\r\n`open` attribute does not synchronise with the virtual dom on the `details` element, when using the `details` element as a controlled component. \r\n\r\nI have a codesandbox [here](https://codesandbox.io/s/xl756mk82w) that demonstrates the current behaviour. \r\n\r\n**What is the expected behavior?**\r\nThe `open` attribute stays synchronised with the virtual dom and is added/removed.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nReact: **`16.8.6`**\r\nBrowser: **Chrome**\r\nDid this work in previous versions of React? **No**\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/15446",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/15446/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/15446/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/15446/events",
        "html_url": "https://github.com/facebook/react/issues/15446",
        "id": 434847956,
        "node_id": "MDU6SXNzdWU0MzQ4NDc5NTY=",
        "number": 15446,
        "title": "Events before Client Side Hydration",
        "user": {
            "login": "aralroca",
            "id": 13313058,
            "node_id": "MDQ6VXNlcjEzMzEzMDU4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/13313058?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aralroca",
            "html_url": "https://github.com/aralroca",
            "followers_url": "https://api.github.com/users/aralroca/followers",
            "following_url": "https://api.github.com/users/aralroca/following{/other_user}",
            "gists_url": "https://api.github.com/users/aralroca/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aralroca/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aralroca/subscriptions",
            "organizations_url": "https://api.github.com/users/aralroca/orgs",
            "repos_url": "https://api.github.com/users/aralroca/repos",
            "events_url": "https://api.github.com/users/aralroca/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aralroca/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1775955521,
                "node_id": "MDU6TGFiZWwxNzc1OTU1NTIx",
                "url": "https://api.github.com/repos/facebook/react/labels/Resolution:%20Backlog",
                "name": "Resolution: Backlog",
                "color": "9dd1e8",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 21,
        "created_at": "2019-04-18T16:09:41Z",
        "updated_at": "2020-07-31T01:18:21Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Recently I detected a problem using React in SSR. Maybe is quite obvious, but all the JavaScript events that are fired before the JavaScript is loaded, are lost...\r\n\r\nThis is something normal. The JS is not there yet... Ok. However, I expect to have some utility to do some exceptions.\r\n\r\nI'm going to try to explain my case:\r\n\r\nI'm using an image, and in the event `onError`, I want to change the src to render a fallback image.\r\n\r\n```jsx\r\nfunction Img(props) {\r\n  return (\r\n    <img {...props} onError={e => { e.target.src = fallbackSrc } } />\r\n  )\r\n}\r\n```\r\n\r\nNevertheless, this code loaded from SSR, is working \"sometimes\"... I guess that this \"sometimes\" is because if the event is fired before the client side hydration. Is not catched by my JS. And the `e => e.target.src = fallbackSrc` is never executed. However, if the JS is loaded faster than the onError event, is catched, and is rendering the fallback image as I expected.\r\n\r\nI want to propose some utility to do sometimes some exceptions, and render the JS inline on the first render. Perhaps, adding some extra config in `ReactDOM.hydrate`? I dunno... \r\n\r\nOr maybe someone can help me providing any tip in order to fix this?\r\n\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/15069",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/15069/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/15069/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/15069/events",
        "html_url": "https://github.com/facebook/react/issues/15069",
        "id": 418939990,
        "node_id": "MDU6SXNzdWU0MTg5Mzk5OTA=",
        "number": 15069,
        "title": "Can an error boundary prevent React's error logging?",
        "user": {
            "login": "silverwind",
            "id": 115237,
            "node_id": "MDQ6VXNlcjExNTIzNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/115237?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silverwind",
            "html_url": "https://github.com/silverwind",
            "followers_url": "https://api.github.com/users/silverwind/followers",
            "following_url": "https://api.github.com/users/silverwind/following{/other_user}",
            "gists_url": "https://api.github.com/users/silverwind/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silverwind/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silverwind/subscriptions",
            "organizations_url": "https://api.github.com/users/silverwind/orgs",
            "repos_url": "https://api.github.com/users/silverwind/repos",
            "events_url": "https://api.github.com/users/silverwind/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silverwind/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 121709921,
                "node_id": "MDU6TGFiZWwxMjE3MDk5MjE=",
                "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Feature%20Request",
                "name": "Type: Feature Request",
                "color": "c7def8",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 14,
        "created_at": "2019-03-08T20:11:45Z",
        "updated_at": "2020-08-02T20:46:11Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I noticed [this unconditional `console.error`](https://github.com/facebook/react/blob/d0289c7e3a2dfc349dcce7f9eb3dee22464e97bd/packages/react-reconciler/src/ReactFiberErrorLogger.js#L86) which I'd like to prevent to keep the console clean from errors that are already \"caught\" in an error boundary.\r\n\r\nMaybe a condition on `capturedError.errorBoundaryFound` could prevent this logging?",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/15006",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/15006/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/15006/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/15006/events",
        "html_url": "https://github.com/facebook/react/issues/15006",
        "id": 416579679,
        "node_id": "MDU6SXNzdWU0MTY1Nzk2Nzk=",
        "number": 15006,
        "title": "useEffect memory leak when setting state in fetch promise",
        "user": {
            "login": "ryansaam",
            "id": 38289731,
            "node_id": "MDQ6VXNlcjM4Mjg5NzMx",
            "avatar_url": "https://avatars3.githubusercontent.com/u/38289731?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryansaam",
            "html_url": "https://github.com/ryansaam",
            "followers_url": "https://api.github.com/users/ryansaam/followers",
            "following_url": "https://api.github.com/users/ryansaam/following{/other_user}",
            "gists_url": "https://api.github.com/users/ryansaam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ryansaam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ryansaam/subscriptions",
            "organizations_url": "https://api.github.com/users/ryansaam/orgs",
            "repos_url": "https://api.github.com/users/ryansaam/repos",
            "events_url": "https://api.github.com/users/ryansaam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ryansaam/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 620368407,
                "node_id": "MDU6TGFiZWw2MjAzNjg0MDc=",
                "url": "https://api.github.com/repos/facebook/react/labels/Resolution:%20Needs%20More%20Information",
                "name": "Resolution: Needs More Information",
                "color": "fffde7",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 26,
        "created_at": "2019-03-03T23:23:36Z",
        "updated_at": "2020-08-06T01:03:21Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Do you want to request a *feature* or report a *bug*?**\r\nReporting a possible bug\r\n\r\n**What is the current behavior?**\r\nMy app renders fine with no errors but I can't seem to figure out why I keep getting this warning:\r\n\r\nindex.js:1446 Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in a useEffect cleanup function.\r\n    in ArtistProfile (at App.js:51)\r\n    in component (created by Route)\r\n\r\napi-calls.js (Here's a link):\r\nhttps://github.com/ryansaam/litphum/blob/master/src/api-calls.js\r\n\r\nApp.js\r\n```javascript\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      user: {},\r\n      spotifyAPI: {}\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    if (user_token) {\r\n      sessionStorage.setItem('access_token', user_token)\r\n      this.setState({\r\n        spotifyAPI: new spotifyAPI( user_token )\r\n      })\r\n    } else if (sessionStorage.getItem('access_token')) {\r\n      this.setState({\r\n        spotifyAPI: new spotifyAPI( sessionStorage.getItem('access_token') )\r\n      })\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.spotifyAPI !== prevState.spotifyAPI)\r\n      this.state.spotifyAPI.getUserProfile()\r\n      .then(data => this.setState({user: data}))\r\n  }\r\n  \r\n  render() {\r\n    const { user, spotifyAPI } = this.state\r\n    const token = sessionStorage.getItem('access_token')\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n            { (spotifyAPI.user_token && user)\r\n            ? (<div className=\"logged-in\">\r\n                <div style={{width: \"250px\", height: \"100%\", position: \"relative\", float: \"left\"}} >\r\n                  <Nav image={user.images ? user.images[0].url : null} user={user} />\r\n                </div>\r\n                <main id=\"main\">\r\n                  <Route path={`/${user.type}/${user.id}`} exact component={() => <Home spotifyAPI={spotifyAPI} />} />\r\n                  <Route path=\"/artist/\" component={() => <ArtistProfile spotifyAPI={spotifyAPI} />} />\r\n                </main>\r\n              </div>) \r\n            : <div onClick={() => window.location = \"http://localhost:8888/login\"} >log in</div>\r\n            }\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n```\r\n\r\nArtistProfile.js\r\n```javascript\r\nconst  ArtistProfile = props => {\r\n  const [artistData, setArtistData] = useState(null)\r\n  const { getArtist, getArtistAlbums, getArtistTopTracks } = props.spotifyAPI\r\n\r\n  useEffect(() => {\r\n    const id = window.location.pathname.split(\"/\").pop()\r\n    const ac = new AbortController()\r\n    console.log(id)\r\n    Promise.all([\r\n      getArtist(id, ac),\r\n      getArtistAlbums(id, [\"album\"],\"US\", 10, 0, ac),\r\n      getArtistTopTracks(id, \"US\", ac)\r\n    ])\r\n    .then(response => {\r\n      setArtistData({\r\n        artist: response[0],\r\n        artistAlbums: response[1],\r\n        artistTopTracks: response[2]\r\n      })\r\n    })\r\n    .catch(ex => console.error(ex))\r\n    return () => ac.abort()\r\n  }, [])\r\n  console.log(artistData)\r\n  return (\r\n    <div>\r\n      <ArtistProfileContainer>\r\n        <AlbumContainer>\r\n          {artistData ? artistData.artistAlbums.items.map(album => {\r\n            return (\r\n              <AlbumTag\r\n                image={album.images[0].url}\r\n                name={album.name}\r\n                artists={album.artists}\r\n                key={album.id}\r\n              />\r\n            )\r\n          })\r\n          : null}\r\n        </AlbumContainer>\r\n      </ArtistProfileContainer>\r\n    </div>\r\n  )\r\n}\r\n```\r\n\r\n**What is the expected behavior?**\r\nIf you can see in ArtistProfile.js I am using a clean up function that aborts when the component does unmount. The fetch would be aborted and state shouldn't update but for some reason I am still getting this memory leak warning.\r\n\r\nWhat I am expecting is for the warning to no longer throw because am using a clean up function that aborts the fetch.\r\n\r\nLink to repo: https://github.com/ryansaam/litphum\r\n\r\n- Files mentioned\r\n    App.js: https://github.com/ryansaam/litphum/blob/master/src/App.js\r\n    ArtistProfile.js: https://github.com/ryansaam/litphum/blob/master/src/components/ArtistProfile.js\r\n    api-calls.js: https://github.com/ryansaam/litphum/blob/master/src/api-calls.js\r\n\r\nMy stackoverflow question: https://stackoverflow.com/questions/54954385/react-useeffect-causing-cant-perform-a-react-state-update-on-an-unmounted-comp/54964237#54964237\r\n\r\n\r\n**Which versions of React, and which browser**\r\nReact 16.8.2\r\nLatest version of Chrome\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/13991",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/13991/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/13991/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/13991/events",
        "html_url": "https://github.com/facebook/react/issues/13991",
        "id": 374587589,
        "node_id": "MDU6SXNzdWUzNzQ1ODc1ODk=",
        "number": 13991,
        "title": "Hooks + multiple instances of React",
        "user": {
            "login": "brunolemos",
            "id": 619186,
            "node_id": "MDQ6VXNlcjYxOTE4Ng==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/619186?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brunolemos",
            "html_url": "https://github.com/brunolemos",
            "followers_url": "https://api.github.com/users/brunolemos/followers",
            "following_url": "https://api.github.com/users/brunolemos/following{/other_user}",
            "gists_url": "https://api.github.com/users/brunolemos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brunolemos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brunolemos/subscriptions",
            "organizations_url": "https://api.github.com/users/brunolemos/orgs",
            "repos_url": "https://api.github.com/users/brunolemos/repos",
            "events_url": "https://api.github.com/users/brunolemos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brunolemos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1109410193,
                "node_id": "MDU6TGFiZWwxMTA5NDEwMTkz",
                "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Hooks",
                "name": "Component: Hooks",
                "color": "c2f27b",
                "default": false,
                "description": ""
            },
            {
                "id": 710375792,
                "node_id": "MDU6TGFiZWw3MTAzNzU3OTI=",
                "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Discussion",
                "name": "Type: Discussion",
                "color": "fef2c0",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 260,
        "created_at": "2018-10-27T00:34:08Z",
        "updated_at": "2020-08-06T14:48:26Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# To people coming from search: please [read this page first](https://reactjs.org/warnings/invalid-hook-call-warning.html). It contains most common possible fixes!\r\n\r\n\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\nEnhancement\r\n\r\n**What is the current behavior?**\r\n\r\nI had multiple instances of React by mistake.\r\n\r\nWhen trying to use hooks, got this error:\r\n`hooks can only be called inside the body of a function component`\r\n\r\nWhich is not correct since I was using function components. Took me a while to find the real cause of the issue.\r\n\r\n**What is the expected behavior?**\r\n\r\nShow the correct error message. Maybe detect that the app has multiple instances of React and say that it may be the reason of bugs. ",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/13097",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/13097/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/13097/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/13097/events",
        "html_url": "https://github.com/facebook/react/issues/13097",
        "id": 334981118,
        "node_id": "MDU6SXNzdWUzMzQ5ODExMTg=",
        "number": 13097,
        "title": "Add support for hydrating portals",
        "user": {
            "login": "marcusdarmstrong",
            "id": 3826925,
            "node_id": "MDQ6VXNlcjM4MjY5MjU=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/3826925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marcusdarmstrong",
            "html_url": "https://github.com/marcusdarmstrong",
            "followers_url": "https://api.github.com/users/marcusdarmstrong/followers",
            "following_url": "https://api.github.com/users/marcusdarmstrong/following{/other_user}",
            "gists_url": "https://api.github.com/users/marcusdarmstrong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marcusdarmstrong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marcusdarmstrong/subscriptions",
            "organizations_url": "https://api.github.com/users/marcusdarmstrong/orgs",
            "repos_url": "https://api.github.com/users/marcusdarmstrong/repos",
            "events_url": "https://api.github.com/users/marcusdarmstrong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marcusdarmstrong/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 121709921,
                "node_id": "MDU6TGFiZWwxMjE3MDk5MjE=",
                "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Feature%20Request",
                "name": "Type: Feature Request",
                "color": "c7def8",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 24,
        "created_at": "2018-06-22T18:45:31Z",
        "updated_at": "2020-08-05T20:50:18Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\nProbably bug, but arguably a feature request, I suppose.\r\n\r\n**What is the current behavior?**\r\n\r\nI've attempted my best effort at a fiddle that shows off the particular issue. Obviously server side rendering is impossible via JSFiddle, but the markup should be equivalent to having rendered `Test` into a div with id `test-1` during server side render.\r\n\r\nhttps://jsfiddle.net/y8o5n2zg/\r\n\r\nAs seen in the fiddle, an attempt to ReactDOM.hydrate() a portal results in:\r\n> `Warning: Expected server HTML to contain a matching text node for \"Hello World\" in <div>.`\r\n\r\nAdditionally, after failing to hydrate, React renders the component and appends it resulting in a duplicated section of DOM:\r\n> `<div id=\"test-1\">Hello WorldHello World</div>`\r\n\r\n**What is the expected behavior?**\r\n\r\nIn an ideal world, calling hydrate on a component that has portals would allow those DOM containers to hydrate into the components they were rendered with.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nI've only tested this in 16.4.1, but I've confirmed the behavior in Chrome and Firefox. Given that I'm really looking at an edge case here I doubt it worked previously.\r\n\r\n\r\n#### *Why* I'm doing this edge-case-y nonsense:\r\n\r\nWe're currently using multiple React roots on our pages (as some portions of the pages are not rendered by React yet), most of which are server-side rendered. We'd like to be able to hydrate them into a single React root on page, so that we can share contexts between them without difficulty and without repeating those context components in memory (in some cases we can have a good number of roots on the page—20-30, perhaps?).\r\n\r\nIn searching, I found a few potentially related bugs (#12615, #10713, #11169), but it seemed like these really didn't line up with my (hopefully valid?) use case.\r\n\r\nThanks!\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/13044",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/13044/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/13044/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/13044/events",
        "html_url": "https://github.com/facebook/react/issues/13044",
        "id": 332416688,
        "node_id": "MDU6SXNzdWUzMzI0MTY2ODg=",
        "number": 13044,
        "title": "Allow Portals to be used for Reparenting",
        "user": {
            "login": "philipp-spiess",
            "id": 458591,
            "node_id": "MDQ6VXNlcjQ1ODU5MQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/458591?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/philipp-spiess",
            "html_url": "https://github.com/philipp-spiess",
            "followers_url": "https://api.github.com/users/philipp-spiess/followers",
            "following_url": "https://api.github.com/users/philipp-spiess/following{/other_user}",
            "gists_url": "https://api.github.com/users/philipp-spiess/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/philipp-spiess/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/philipp-spiess/subscriptions",
            "organizations_url": "https://api.github.com/users/philipp-spiess/orgs",
            "repos_url": "https://api.github.com/users/philipp-spiess/repos",
            "events_url": "https://api.github.com/users/philipp-spiess/events{/privacy}",
            "received_events_url": "https://api.github.com/users/philipp-spiess/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 121709921,
                "node_id": "MDU6TGFiZWwxMjE3MDk5MjE=",
                "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Feature%20Request",
                "name": "Type: Feature Request",
                "color": "c7def8",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 27,
        "created_at": "2018-06-14T14:01:27Z",
        "updated_at": "2020-08-04T18:12:34Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "**Do you want to request a *feature* or report a *bug*?**\r\n\r\nfeature\r\n\r\n**What is the current behavior?**\r\n\r\n[Reparenting](https://github.com/facebook/react/issues/3965) is an unsolved issues of React(DOM). So far, it was possible to hack around the missing support for it by relying on unstable API (`unstable_renderSubtreeIntoContainer`) to render **and update** a subtree inside a different container. It's important to note that this API was using React's diffing algorithm so that, similar to `ReactDOM.render()`, it is possible to keep components mounted.\r\n\r\n```js\r\nReactDOM.render(<Foo />, container);\r\n// This won't get <Foo /> to be unmounted and mounted again:\r\nReactDOM.render(<Foo />, container);\r\n\r\nReactDOM.unstable_renderSubtreeIntoContainer(\r\n  parentComponent,\r\n  <Foo />,\r\n  container\r\n);\r\n// This also won't get <Foo /> to be unmounted and mounted again, no matter if \r\n// we change parentComponent (and thus call it from a different parent):\r\nReactDOM.unstable_renderSubtreeIntoContainer(\r\n  parentComponent,\r\n  <Foo />,\r\n  container\r\n);\r\n```\r\n\r\nHowever this unstable API is [going to be deprecated soon](https://github.com/facebook/react/issues/10143) and recent features like the introduction of the new context API introduced [additional issues](https://github.com/facebook/react/issues/12493).\r\n\r\nAs an alternative to this unstable API, `ReactDOM.createPortal(children, container)` was introduced. However this API is unsuitable for the reparenting issue since it will always [create a new mount point](https://github.com/facebook/react/issues/10713) inside the `container` instead of applying the diffing _when called from a different parent_ (Check out this [CodeSandbox](https://codesandbox.io/s/91o7oovo54) where calling the portal from a different portal will cause the `<Leaf />` to have a new uuid). The reason for this is that we want multiple portals to be able to render inside the same `container` which makes perfect sense for more common use cases like popovers, etc.\r\n\r\nBefore we're going to remove `unstable_renderSubtreeIntoContainer`, I suggest we find a way to portal into a specific node instead of appending to it so that we can diff its contents instead (or implement a solution for #3965 although that seems to be more complicated), similar to `unstable_renderSubtreeIntoContainer`.",
        "performed_via_github_app": null
    }
]